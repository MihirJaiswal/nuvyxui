{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "image-scanner-demo",
  "type": "registry:example",
  "title": "Image Scanner Demo",
  "description": "Example showing a image scanner.",
  "dependencies": [
    "..",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "https://nuvyxui.vercel.app/r/image-scanner.json"
  ],
  "files": [
    {
      "path": "src/nuvyxui/demos/image-scanner-demo.tsx",
      "content": "\"use client\";\nimport React, { useState } from \"react\";\nimport { ImageScanner } from \"../components/image-scanner\";\nimport { Button } from \"@/components/ui/button\";\n\nexport const ImageScannerDemo = () => {\n  const [triggerIndex, setTriggerIndex] = useState<number | null>(null);\n  const [scanCount, setScanCount] = useState(0);\n  const triggerNewScan = () => {\n    setTriggerIndex(null);\n    setTimeout(() => {\n      setTriggerIndex(5);\n      setScanCount((prev) => prev + 1);\n    }, 50);\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-3\">\n      <div className=\"p-3\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          <div className=\"flex flex-col items-center space-y-4 p-6 transition-all duration-300\">\n            <div className=\"relative group\">\n              <ImageScanner\n                image=\"/logo.png\"\n                scanDirection=\"vertical\"\n                scanColor=\"blue\"\n                className=\"w-48 h-48 rounded-lg cursor-pointer border-2 border-blue-200 dark:border-blue-900\"\n              />\n            </div>\n            <div className=\"text-center\">\n              <h3 className=\"font-bold text-xl mt-2\">Click to Scan</h3>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-center space-y-4 p-6 transition-all duration-300\">\n            <div className=\"relative\">\n              <ImageScanner\n                image=\"/logo.png\"\n                scanType=\"line\"\n                scanColor=\"amber\"\n                repeating={true}\n                scanSpeed={3}\n                className=\"w-48 h-48 rounded-lg border-2 border-amber-200 dark:border-amber-900\"\n              />\n            </div>\n            <div className=\"text-center\">\n              <h3 className=\"font-bold text-xl mt-2\">Repeating Scan</h3>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-center space-y-4 p-6 transition-all duration-300\">\n            <div className=\"relative\">\n              <ImageScanner\n                image=\"/logo.png\"\n                scanSpeed={1}\n                scanColor=\"red\"\n                triggerScan={triggerIndex === 5}\n                key={`scanner-${scanCount}`}\n                className=\"w-48 h-48 rounded-lg border-2 border-red-200 dark:border-red-900\"\n              />\n            </div>\n            <div className=\"text-center\">\n              <h3 className=\"font-bold text-xl mt-2\">Button Triggered</h3>\n            </div>\n            <Button onClick={triggerNewScan}>Trigger Scan</Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n",
      "type": "registry:example",
      "target": "components/image-scanner-demo.tsx"
    },
    {
      "path": "src\\nuvyxui\\demos\\image-scanner-demo.tsx",
      "content": "\"use client\";\nimport React, { useState } from \"react\";\nimport { ImageScanner } from \"../components/image-scanner\";\nimport { Button } from \"@/components/ui/button\";\n\nexport const ImageScannerDemo = () => {\n  const [triggerIndex, setTriggerIndex] = useState<number | null>(null);\n  const [scanCount, setScanCount] = useState(0);\n  const triggerNewScan = () => {\n    setTriggerIndex(null);\n    setTimeout(() => {\n      setTriggerIndex(5);\n      setScanCount((prev) => prev + 1);\n    }, 50);\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-3\">\n      <div className=\"p-3\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          <div className=\"flex flex-col items-center space-y-4 p-6 transition-all duration-300\">\n            <div className=\"relative group\">\n              <ImageScanner\n                image=\"/logo.png\"\n                scanDirection=\"vertical\"\n                scanColor=\"blue\"\n                className=\"w-48 h-48 rounded-lg cursor-pointer border-2 border-blue-200 dark:border-blue-900\"\n              />\n            </div>\n            <div className=\"text-center\">\n              <h3 className=\"font-bold text-xl mt-2\">Click to Scan</h3>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-center space-y-4 p-6 transition-all duration-300\">\n            <div className=\"relative\">\n              <ImageScanner\n                image=\"/logo.png\"\n                scanType=\"line\"\n                scanColor=\"amber\"\n                repeating={true}\n                scanSpeed={3}\n                className=\"w-48 h-48 rounded-lg border-2 border-amber-200 dark:border-amber-900\"\n              />\n            </div>\n            <div className=\"text-center\">\n              <h3 className=\"font-bold text-xl mt-2\">Repeating Scan</h3>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-center space-y-4 p-6 transition-all duration-300\">\n            <div className=\"relative\">\n              <ImageScanner\n                image=\"/logo.png\"\n                scanSpeed={1}\n                scanColor=\"red\"\n                triggerScan={triggerIndex === 5}\n                key={`scanner-${scanCount}`}\n                className=\"w-48 h-48 rounded-lg border-2 border-red-200 dark:border-red-900\"\n              />\n            </div>\n            <div className=\"text-center\">\n              <h3 className=\"font-bold text-xl mt-2\">Button Triggered</h3>\n            </div>\n            <Button onClick={triggerNewScan}>Trigger Scan</Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "src\\components\\ui\\button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-xl text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background text-foreground shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        rainbow:\n          \"group relative animate-rainbow cursor-pointer border-0 bg-[linear-gradient(#121213,#121213),linear-gradient(#121213_50%,rgba(18,18,19,0.6)_80%,rgba(18,18,19,0)),linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))] bg-[length:200%] text-primary-foreground [background-clip:padding-box,border-box,border-box] [background-origin:border-box] [border:calc(0.08*1rem)_solid_transparent] before:absolute before:bottom-[-20%] before:left-1/2 before:z-0 before:h-1/5 before:w-3/5 before:-translate-x-1/2 before:animate-rainbow before:bg-[linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))] before:[filter:blur(calc(0.8*1rem))] dark:bg-[linear-gradient(#fff,#fff),linear-gradient(#fff_50%,rgba(255,255,255,0.6)_80%,rgba(0,0,0,0)),linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))]\",\n        \"rainbow-outline\":\n          \"group relative animate-rainbow cursor-pointer border-0 border-input bg-[linear-gradient(#fff,#fff),linear-gradient(#fff_50%,rgba(255,255,255,0.6)_80%,rgba(0,0,0,0)),linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))] bg-[length:200%] px-4 text-foreground shadow-sm [background-clip:padding-box,border-box,border-box] [background-origin:border-box] [border:calc(0.08*1rem)_solid_transparent] before:absolute before:bottom-[-20%] before:left-1/2 before:z-0 before:h-1/5 before:w-3/5 before:-translate-x-1/2 before:animate-rainbow before:bg-[linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))] before:[filter:blur(calc(0.8*1rem))] dark:bg-[linear-gradient(#121213,#121213),linear-gradient(#121213_50%,rgba(18,18,19,0.6)_80%,rgba(18,18,19,0)),linear-gradient(90deg,hsl(var(--color-1)),hsl(var(--color-5)),hsl(var(--color-3)),hsl(var(--color-4)),hsl(var(--color-2)))]\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-xl px-3 text-xs\",\n        lg: \"h-11 rounded-xl px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\ninterface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        data-slot=\"button\"\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\n\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants, type ButtonProps };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src\\lib\\utils.ts",
      "content": "import clsx, { ClassValue } from \"clsx\";\nimport { Metadata } from \"next\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function humanize(name: string): string {\n  return name\n    .replace(/-/g, \" \")\n    .replace(/([A-Z])/g, \" $1\")\n    .trim()\n    .split(/\\s+/)\n    .map((word) => word[0].toUpperCase() + word.substring(1).toLowerCase())\n    .join(\" \");\n}\n\nexport const truncate = (str: string | null, length: number) => {\n  if (!str || str.length <= length) return str;\n  return `${str.slice(0, length - 3)}...`;\n};\n\nexport const fetcher = (...args: Parameters<typeof fetch>) =>\n  fetch(...args).then((res) => res.json());\n\nexport const capitalize = (str: string, lower = false) =>\n  (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, (match) =>\n    match.toUpperCase(),\n  );\n\nexport function formatDate(input: string | number): string {\n  const date = new Date(input);\n  return date.toLocaleDateString(\"en-US\", {\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n}\n\nexport function absoluteUrl(path: string) {\n  return `${process.env.NEXT_PUBLIC_APP_URL || \"https://nuvyxui.vercel.app\"}${path}`;\n}\n\nexport function constructMetadata({\n  title = \"Nuvyx UI - Modern React + Tailwind CSS + Motion components & Templates\",\n  description = \"Nuvyx UI is a curated collection of the best landing page components built using React + Tailwind CSS + Motion\",\n  image = absoluteUrl(\"/og\"),\n  ...props\n}: {\n  title?: string;\n  description?: string;\n  image?: string;\n  [key: string]: Metadata[keyof Metadata];\n}): Metadata {\n  return {\n    title,\n    description,\n    keywords: [\n      \"React\",\n      \"Tailwind CSS\",\n      \"Motion\",\n      \"Landing Page\",\n      \"Components\",\n      \"Next.js\",\n    ],\n    openGraph: {\n      title,\n      description,\n      type: \"website\",\n      images: [\n        {\n          url: image,\n          width: 1200,\n          height: 630,\n        },\n      ],\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title,\n      description,\n      images: [image],\n      creator: \"@mihirjaiswal\",\n    },\n    icons: \"/favicon.ico\",\n    metadataBase: new URL(\"https://nuvyxui.vercel.app/\"),\n    authors: [\n      {\n        name: \"Mihir Jaiswal\",\n        url: \"https://github.com/MihirJaiswal\",\n      },\n    ],\n    creator: \"mihirjaiswal\",\n    ...props,\n  };\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}