{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-animation-trigger-demo",
  "type": "registry:example",
  "title": "Scroll Animation Trigger Demo",
  "description": "Example showing a scroll animation trigger.",
  "dependencies": [
    "framer-motion",
    "clsx",
    "tailwind-merge",
    "lucide-react",
    "@radix-ui/react-scroll-area"
  ],
  "registryDependencies": [
    "https://nuvyxui.vercel.app/r/scroll-animation-trigger"
  ],
  "files": [
    {
      "path": "src/nuvyxui/demos/scroll-animation-trigger-demo.tsx",
      "content": "import { ScrollAnimationTrigger } from \"@/nuvyxui/components/scroll-animation-trigger\";\nimport {\n  ArrowDown,\n  Sparkles,\n  Zap,\n  Layers,\n  ExternalLink,\n  Wand2,\n} from \"lucide-react\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\nexport function ScrollAnimationTriggerDemo() {\n  return (\n    <div className=\"w-full overflow-hidden flex flex-col\">\n      <ScrollArea className=\"h-[80vh]\">\n        <div className=\"relative flex flex-col items-center pt-60 justify-center text-center px-4 sm:px-6 lg:px-8 py-6 overflow-hidden\">\n          <div className=\"absolute inset-0 overflow-hidden\">\n            {[...Array(10)].map((_, i) => (\n              <div\n                key={i}\n                className=\"absolute rounded-full opacity-20\"\n                style={{\n                  background: i % 2 === 0 ? \"#9206cf\" : \"#ec4899\",\n                  width: `${Math.random() * 5 + 2}vw`,\n                  height: `${Math.random() * 5 + 2}vw`,\n                  left: `${Math.random() * 100}%`,\n                  top: `${Math.random() * 100}%`,\n                }}\n              />\n            ))}\n          </div>\n\n          <ScrollAnimationTrigger\n            effect=\"slide\"\n            direction=\"up\"\n            className=\"flex flex-col items-center justify-center w-full max-w-3xl mx-auto\"\n          >\n            <h1 className=\"text-3xl sm:text-4xl pb-3 md:text-5xl lg:text-6xl font-extrabold mb-4 z-10 px-2\">\n              Scroll Down Here\n            </h1>\n\n            <p className=\"text-gray-600 z-10 dark:text-gray-300 mb-6 font-semibold max-w-md text-base sm:text-lg md:text-xl px-4 w-full\">\n              Scroll down to see the ScrollAnimationTrigger in action\n            </p>\n\n            <div className=\"mt-2 p-3 rounded-full bg-purple-500 shadow-lg cursor-pointer hover:shadow-xl transition-shadow duration-300\">\n              <ArrowDown className=\"h-5 w-5 sm:h-6 sm:w-6 text-white\" />\n            </div>\n          </ScrollAnimationTrigger>\n        </div>\n\n        <div className=\"relative h-12 overflow-hidden\">\n          <svg\n            className=\"absolute bottom-0 w-full h-12 text-white dark:text-gray-900\"\n            viewBox=\"0 0 1200 120\"\n            preserveAspectRatio=\"none\"\n          >\n            <path\n              d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\"\n              className=\"fill-current\"\n            ></path>\n          </svg>\n        </div>\n\n        <div className=\"py-6 sm:py-8\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex flex-wrap gap-12\">\n              <ScrollAnimationTrigger\n                effect=\"fade\"\n                className=\"p-3 sm:p-4 md:p-6\"\n                delay={1}\n              >\n                <div className=\"bg-gradient-to-br from-blue-50 to-blue-100 dark:from-zinc-900 dark:to-zinc-800 p-6 sm:p-8 md:p-10 rounded-2xl sm:rounded-3xl shadow-xl w-full border-t border-l border-blue-200/50 dark:border-blue-500/20 relative overflow-hidden group\">\n                  <div className=\"absolute top-0 right-0 w-1/3 h-1/3 rounded-full bg-blue-500/10 -mr-10 -mt-10 dark:bg-blue-500/5\"></div>\n                  <div className=\"absolute bottom-0 left-0 w-1/4 h-1/4 rounded-full bg-blue-500/10 -ml-5 -mb-5 dark:bg-blue-500/5\"></div>\n\n                  <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-center mb-4 sm:mb-6\">\n                    <div className=\"p-3 sm:p-4 bg-white dark:bg-zinc-800 rounded-xl shadow-md border border-blue-100 dark:border-blue-900/50 relative z-10 group-hover:shadow-blue-200 dark:group-hover:shadow-blue-900/30 transition-shadow duration-300\">\n                      <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/20 to-blue-600/20 dark:from-blue-500/10 dark:to-blue-600/10 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      <Sparkles className=\"h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 text-blue-500 dark:text-blue-400 relative z-10\" />\n                    </div>\n                    <h3 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center sm:text-start text-blue-800 dark:text-blue-300\">\n                      Fade In Effect\n                    </h3>\n                  </div>\n\n                  <p className=\"text-blue-700/80 dark:text-blue-300/90 text-center sm:text-start text-sm sm:text-base md:text-lg leading-relaxed relative z-10 mb-4 sm:mb-6\">\n                    This content gently fades into view as you scroll down the\n                    page, creating a subtle and elegant appearance that draws\n                    attention without being distracting.\n                  </p>\n\n                  <div className=\"flex justify-center sm:justify-end mt-4\">\n                    <button className=\"px-4 sm:px-5 py-2 rounded-full bg-blue-500 text-white flex items-center gap-1 sm:gap-2 text-xs sm:text-sm font-medium hover:bg-blue-600 transition-colors duration-300 shadow-md\">\n                      Learn More\n                      <ExternalLink size={14} />\n                    </button>\n                  </div>\n                </div>\n              </ScrollAnimationTrigger>\n\n              <ScrollAnimationTrigger\n                effect=\"scale\"\n                className=\"p-3 sm:p-4 md:p-6\"\n                delay={0.3}\n                fromScale={0.7}\n                toScale={1}\n              >\n                <div className=\"bg-gradient-to-br from-purple-50 to-purple-100 dark:from-zinc-900 dark:to-zinc-800 p-6 sm:p-8 md:p-10 rounded-2xl sm:rounded-3xl shadow-xl w-full border-t border-l border-purple-200/50 dark:border-purple-500/20 relative overflow-hidden group\">\n                  {[...Array(3)].map((_, i) => (\n                    <div\n                      key={i}\n                      className=\"absolute rounded-full bg-purple-500/20 dark:bg-purple-500/10\"\n                      style={{\n                        width: `${4 + i * 3}vw`,\n                        height: `${4 + i * 3}vw`,\n                        top: 20 + i * 30 + \"%\",\n                        right: -20 + i * 10 + \"%\",\n                      }}\n                    />\n                  ))}\n\n                  <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-center mb-4 sm:mb-6\">\n                    <div className=\"p-3 sm:p-4 bg-white dark:bg-zinc-800 rounded-xl shadow-md border border-purple-100 dark:border-purple-900/50 relative z-10 group-hover:shadow-purple-200 dark:group-hover:shadow-purple-900/30 transition-shadow duration-300\">\n                      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-500/20 to-purple-600/20 dark:from-purple-500/10 dark:to-purple-600/10 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      <Zap className=\"h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 text-purple-500 dark:text-purple-400 relative z-10\" />\n                    </div>\n                    <h3 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center sm:text-start text-purple-800 dark:text-purple-300\">\n                      Scale Effect\n                    </h3>\n                  </div>\n\n                  <p className=\"text-purple-700/80 dark:text-purple-300/90 text-center sm:text-start text-sm sm:text-base md:text-lg leading-relaxed relative z-10 mb-4 sm:mb-6\">\n                    Watch as this content smoothly scales from small to full\n                    size as you scroll, creating a dynamic entrance that\n                    captures attention and adds visual depth.\n                  </p>\n\n                  <div className=\"w-full bg-purple-200/50 dark:bg-purple-900/30 h-1.5 rounded-full mt-4 sm:mt-6 overflow-hidden relative z-10\">\n                    <div className=\"h-full bg-gradient-to-r from-purple-500 to-purple-700 rounded-full w-3/4\" />\n                  </div>\n\n                  <div className=\"flex justify-between text-xs font-medium text-purple-700 dark:text-purple-300/70 mt-2 relative z-10\">\n                    <span>Scale Start</span>\n                    <span>Scale Complete</span>\n                  </div>\n                </div>\n              </ScrollAnimationTrigger>\n\n              <ScrollAnimationTrigger\n                effect=\"custom\"\n                delay={3}\n                customProps={{\n                  initial: { x: -100, y: 100, opacity: 0, rotate: -10 },\n                  animate: { x: 0, y: 0, opacity: 1, rotate: 0 },\n                  transition: { type: \"spring\", stiffness: 100, damping: 10 },\n                }}\n                className=\"p-3 sm:p-4 md:p-6\"\n              >\n                <div className=\"p-0 rounded-2xl sm:rounded-3xl shadow-xl w-full overflow-hidden relative\">\n                  <div className=\"absolute inset-0 bg-gradient-to-br from-indigo-600 to-purple-700\">\n                    <div\n                      className=\"absolute inset-0\"\n                      style={{\n                        backgroundImage:\n                          'url(\\'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"%3E%3Cpath d=\"M0 20 L20 0 L40 20 L20 40 Z\" fill=\"none\" stroke=\"rgba(255,255,255,0.1)\" /%3E%3C/svg%3E\\')',\n                      }}\n                    ></div>\n                  </div>\n\n                  <div className=\"p-6 sm:p-8 md:p-10 relative z-10\">\n                    <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-center mb-4 sm:mb-6\">\n                      <div className=\"p-3 sm:p-4 bg-white/10 backdrop-blur-sm rounded-xl shadow-lg relative z-10 group-hover:bg-white/20 transition-colors duration-300\">\n                        <Wand2 className=\"h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 text-white relative z-10\" />\n                      </div>\n                      <h3 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center sm:text-start text-white\">\n                        Custom Animation\n                      </h3>\n                    </div>\n\n                    <p className=\"text-white/90 text-center sm:text-start text-sm sm:text-base md:text-lg leading-relaxed relative z-10 mb-4 sm:mb-6\">\n                      This demonstrates a custom animation path combining\n                      multiple movements and rotations. Create your own unique\n                      entrance effects with complete creative freedom.\n                    </p>\n\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-4 sm:mt-6\">\n                      <div className=\"p-3 bg-white/10 backdrop-blur-sm rounded-xl\">\n                        <div className=\"text-xs sm:text-sm font-medium text-white/80 mb-1\">\n                          Movement\n                        </div>\n                        <div className=\"text-base sm:text-lg font-semibold text-white\">\n                          Diagonal Slide\n                        </div>\n                      </div>\n                      <div className=\"p-3 bg-white/10 backdrop-blur-sm rounded-xl\">\n                        <div className=\"text-xs sm:text-sm font-medium text-white/80 mb-1\">\n                          Rotation\n                        </div>\n                        <div className=\"text-base sm:text-lg font-semibold text-white\">\n                          -10° to 0°\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ScrollAnimationTrigger>\n              <ScrollAnimationTrigger\n                effect=\"slide\"\n                direction=\"up\"\n                className=\"p-3 sm:p-4 md:p-6\"\n                delay={0.5}\n              >\n                <div className=\"bg-gradient-to-br from-green-50 to-green-100 dark:from-zinc-900 dark:to-zinc-800 p-6 sm:p-8 md:p-10 rounded-2xl sm:rounded-3xl shadow-xl w-full border-t border-l border-green-200/50 dark:border-green-500/20 relative overflow-hidden group\">\n                  <svg\n                    className=\"absolute right-0 top-0 h-full opacity-30 dark:opacity-20\"\n                    viewBox=\"0 0 100 200\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M20 0C20 110.457 110.457 200 0 200\"\n                      stroke=\"#22C55E\"\n                      strokeWidth=\"2\"\n                    />\n                    <path\n                      d=\"M40 0C40 110.457 130.457 200 20 200\"\n                      stroke=\"#22C55E\"\n                      strokeWidth=\"2\"\n                      opacity=\"0.7\"\n                    />\n                    <path\n                      d=\"M60 0C60 110.457 150.457 200 40 200\"\n                      stroke=\"#22C55E\"\n                      strokeWidth=\"2\"\n                      opacity=\"0.4\"\n                    />\n                  </svg>\n\n                  <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-center mb-4 sm:mb-6\">\n                    <div className=\"p-3 sm:p-4 bg-white dark:bg-zinc-800 rounded-xl shadow-md border border-green-100 dark:border-green-900/50 relative z-10 group-hover:shadow-green-200 dark:group-hover:shadow-green-900/30 transition-shadow duration-300\">\n                      <div className=\"absolute inset-0 bg-gradient-to-br from-green-500/20 to-green-600/20 dark:from-green-500/10 dark:to-green-600/10 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      <Layers className=\"h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 text-green-500 dark:text-green-400 relative z-10\" />\n                    </div>\n                    <h3 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center sm:text-start text-green-800 dark:text-green-300\">\n                      Slide Up Effect\n                    </h3>\n                  </div>\n\n                  <p className=\"text-green-700/80 dark:text-green-300/90 text-center sm:text-start text-sm sm:text-base md:text-lg leading-relaxed relative z-10 mb-4 sm:mb-6\">\n                    This content slides gracefully into view from below,\n                    creating a smooth transition that guides the eye naturally\n                    as you explore the page content.\n                  </p>\n\n                  <div className=\"flex flex-wrap gap-2 justify-center sm:justify-start mt-4 relative z-10\">\n                    <span className=\"px-3 py-1 bg-green-500/10 dark:bg-green-500/20 text-green-700 dark:text-green-300 rounded-full text-xs font-medium\">\n                      Smooth\n                    </span>\n                    <span className=\"px-3 py-1 bg-green-500/10 dark:bg-green-500/20 text-green-700 dark:text-green-300 rounded-full text-xs font-medium\">\n                      Elegant\n                    </span>\n                    <span className=\"px-3 py-1 bg-green-500/10 dark:bg-green-500/20 text-green-700 dark:text-green-300 rounded-full text-xs font-medium\">\n                      Natural\n                    </span>\n                  </div>\n                </div>\n              </ScrollAnimationTrigger>\n            </div>\n          </div>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n\nexport default ScrollAnimationTriggerDemo;\n",
      "type": "registry:example",
      "target": "components/scroll-animation-trigger-demo.tsx"
    },
    {
      "path": "src\\nuvyxui\\demos\\scroll-animation-trigger-demo.tsx",
      "content": "import { ScrollAnimationTrigger } from \"@/nuvyxui/components/scroll-animation-trigger\";\nimport {\n  ArrowDown,\n  Sparkles,\n  Zap,\n  Layers,\n  ExternalLink,\n  Wand2,\n} from \"lucide-react\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\nexport function ScrollAnimationTriggerDemo() {\n  return (\n    <div className=\"w-full overflow-hidden flex flex-col\">\n      <ScrollArea className=\"h-[80vh]\">\n        <div className=\"relative flex flex-col items-center pt-60 justify-center text-center px-4 sm:px-6 lg:px-8 py-6 overflow-hidden\">\n          <div className=\"absolute inset-0 overflow-hidden\">\n            {[...Array(10)].map((_, i) => (\n              <div\n                key={i}\n                className=\"absolute rounded-full opacity-20\"\n                style={{\n                  background: i % 2 === 0 ? \"#9206cf\" : \"#ec4899\",\n                  width: `${Math.random() * 5 + 2}vw`,\n                  height: `${Math.random() * 5 + 2}vw`,\n                  left: `${Math.random() * 100}%`,\n                  top: `${Math.random() * 100}%`,\n                }}\n              />\n            ))}\n          </div>\n\n          <ScrollAnimationTrigger\n            effect=\"slide\"\n            direction=\"up\"\n            className=\"flex flex-col items-center justify-center w-full max-w-3xl mx-auto\"\n          >\n            <h1 className=\"text-3xl sm:text-4xl pb-3 md:text-5xl lg:text-6xl font-extrabold mb-4 z-10 px-2\">\n              Scroll Down Here\n            </h1>\n\n            <p className=\"text-gray-600 z-10 dark:text-gray-300 mb-6 font-semibold max-w-md text-base sm:text-lg md:text-xl px-4 w-full\">\n              Scroll down to see the ScrollAnimationTrigger in action\n            </p>\n\n            <div className=\"mt-2 p-3 rounded-full bg-purple-500 shadow-lg cursor-pointer hover:shadow-xl transition-shadow duration-300\">\n              <ArrowDown className=\"h-5 w-5 sm:h-6 sm:w-6 text-white\" />\n            </div>\n          </ScrollAnimationTrigger>\n        </div>\n\n        <div className=\"relative h-12 overflow-hidden\">\n          <svg\n            className=\"absolute bottom-0 w-full h-12 text-white dark:text-gray-900\"\n            viewBox=\"0 0 1200 120\"\n            preserveAspectRatio=\"none\"\n          >\n            <path\n              d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\"\n              className=\"fill-current\"\n            ></path>\n          </svg>\n        </div>\n\n        <div className=\"py-6 sm:py-8\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex flex-wrap gap-12\">\n              <ScrollAnimationTrigger\n                effect=\"fade\"\n                className=\"p-3 sm:p-4 md:p-6\"\n                delay={1}\n              >\n                <div className=\"bg-gradient-to-br from-blue-50 to-blue-100 dark:from-zinc-900 dark:to-zinc-800 p-6 sm:p-8 md:p-10 rounded-2xl sm:rounded-3xl shadow-xl w-full border-t border-l border-blue-200/50 dark:border-blue-500/20 relative overflow-hidden group\">\n                  <div className=\"absolute top-0 right-0 w-1/3 h-1/3 rounded-full bg-blue-500/10 -mr-10 -mt-10 dark:bg-blue-500/5\"></div>\n                  <div className=\"absolute bottom-0 left-0 w-1/4 h-1/4 rounded-full bg-blue-500/10 -ml-5 -mb-5 dark:bg-blue-500/5\"></div>\n\n                  <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-center mb-4 sm:mb-6\">\n                    <div className=\"p-3 sm:p-4 bg-white dark:bg-zinc-800 rounded-xl shadow-md border border-blue-100 dark:border-blue-900/50 relative z-10 group-hover:shadow-blue-200 dark:group-hover:shadow-blue-900/30 transition-shadow duration-300\">\n                      <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/20 to-blue-600/20 dark:from-blue-500/10 dark:to-blue-600/10 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      <Sparkles className=\"h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 text-blue-500 dark:text-blue-400 relative z-10\" />\n                    </div>\n                    <h3 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center sm:text-start text-blue-800 dark:text-blue-300\">\n                      Fade In Effect\n                    </h3>\n                  </div>\n\n                  <p className=\"text-blue-700/80 dark:text-blue-300/90 text-center sm:text-start text-sm sm:text-base md:text-lg leading-relaxed relative z-10 mb-4 sm:mb-6\">\n                    This content gently fades into view as you scroll down the\n                    page, creating a subtle and elegant appearance that draws\n                    attention without being distracting.\n                  </p>\n\n                  <div className=\"flex justify-center sm:justify-end mt-4\">\n                    <button className=\"px-4 sm:px-5 py-2 rounded-full bg-blue-500 text-white flex items-center gap-1 sm:gap-2 text-xs sm:text-sm font-medium hover:bg-blue-600 transition-colors duration-300 shadow-md\">\n                      Learn More\n                      <ExternalLink size={14} />\n                    </button>\n                  </div>\n                </div>\n              </ScrollAnimationTrigger>\n\n              <ScrollAnimationTrigger\n                effect=\"scale\"\n                className=\"p-3 sm:p-4 md:p-6\"\n                delay={0.3}\n                fromScale={0.7}\n                toScale={1}\n              >\n                <div className=\"bg-gradient-to-br from-purple-50 to-purple-100 dark:from-zinc-900 dark:to-zinc-800 p-6 sm:p-8 md:p-10 rounded-2xl sm:rounded-3xl shadow-xl w-full border-t border-l border-purple-200/50 dark:border-purple-500/20 relative overflow-hidden group\">\n                  {[...Array(3)].map((_, i) => (\n                    <div\n                      key={i}\n                      className=\"absolute rounded-full bg-purple-500/20 dark:bg-purple-500/10\"\n                      style={{\n                        width: `${4 + i * 3}vw`,\n                        height: `${4 + i * 3}vw`,\n                        top: 20 + i * 30 + \"%\",\n                        right: -20 + i * 10 + \"%\",\n                      }}\n                    />\n                  ))}\n\n                  <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-center mb-4 sm:mb-6\">\n                    <div className=\"p-3 sm:p-4 bg-white dark:bg-zinc-800 rounded-xl shadow-md border border-purple-100 dark:border-purple-900/50 relative z-10 group-hover:shadow-purple-200 dark:group-hover:shadow-purple-900/30 transition-shadow duration-300\">\n                      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-500/20 to-purple-600/20 dark:from-purple-500/10 dark:to-purple-600/10 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      <Zap className=\"h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 text-purple-500 dark:text-purple-400 relative z-10\" />\n                    </div>\n                    <h3 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center sm:text-start text-purple-800 dark:text-purple-300\">\n                      Scale Effect\n                    </h3>\n                  </div>\n\n                  <p className=\"text-purple-700/80 dark:text-purple-300/90 text-center sm:text-start text-sm sm:text-base md:text-lg leading-relaxed relative z-10 mb-4 sm:mb-6\">\n                    Watch as this content smoothly scales from small to full\n                    size as you scroll, creating a dynamic entrance that\n                    captures attention and adds visual depth.\n                  </p>\n\n                  <div className=\"w-full bg-purple-200/50 dark:bg-purple-900/30 h-1.5 rounded-full mt-4 sm:mt-6 overflow-hidden relative z-10\">\n                    <div className=\"h-full bg-gradient-to-r from-purple-500 to-purple-700 rounded-full w-3/4\" />\n                  </div>\n\n                  <div className=\"flex justify-between text-xs font-medium text-purple-700 dark:text-purple-300/70 mt-2 relative z-10\">\n                    <span>Scale Start</span>\n                    <span>Scale Complete</span>\n                  </div>\n                </div>\n              </ScrollAnimationTrigger>\n\n              <ScrollAnimationTrigger\n                effect=\"custom\"\n                delay={3}\n                customProps={{\n                  initial: { x: -100, y: 100, opacity: 0, rotate: -10 },\n                  animate: { x: 0, y: 0, opacity: 1, rotate: 0 },\n                  transition: { type: \"spring\", stiffness: 100, damping: 10 },\n                }}\n                className=\"p-3 sm:p-4 md:p-6\"\n              >\n                <div className=\"p-0 rounded-2xl sm:rounded-3xl shadow-xl w-full overflow-hidden relative\">\n                  <div className=\"absolute inset-0 bg-gradient-to-br from-indigo-600 to-purple-700\">\n                    <div\n                      className=\"absolute inset-0\"\n                      style={{\n                        backgroundImage:\n                          'url(\\'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"%3E%3Cpath d=\"M0 20 L20 0 L40 20 L20 40 Z\" fill=\"none\" stroke=\"rgba(255,255,255,0.1)\" /%3E%3C/svg%3E\\')',\n                      }}\n                    ></div>\n                  </div>\n\n                  <div className=\"p-6 sm:p-8 md:p-10 relative z-10\">\n                    <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-center mb-4 sm:mb-6\">\n                      <div className=\"p-3 sm:p-4 bg-white/10 backdrop-blur-sm rounded-xl shadow-lg relative z-10 group-hover:bg-white/20 transition-colors duration-300\">\n                        <Wand2 className=\"h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 text-white relative z-10\" />\n                      </div>\n                      <h3 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center sm:text-start text-white\">\n                        Custom Animation\n                      </h3>\n                    </div>\n\n                    <p className=\"text-white/90 text-center sm:text-start text-sm sm:text-base md:text-lg leading-relaxed relative z-10 mb-4 sm:mb-6\">\n                      This demonstrates a custom animation path combining\n                      multiple movements and rotations. Create your own unique\n                      entrance effects with complete creative freedom.\n                    </p>\n\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-4 sm:mt-6\">\n                      <div className=\"p-3 bg-white/10 backdrop-blur-sm rounded-xl\">\n                        <div className=\"text-xs sm:text-sm font-medium text-white/80 mb-1\">\n                          Movement\n                        </div>\n                        <div className=\"text-base sm:text-lg font-semibold text-white\">\n                          Diagonal Slide\n                        </div>\n                      </div>\n                      <div className=\"p-3 bg-white/10 backdrop-blur-sm rounded-xl\">\n                        <div className=\"text-xs sm:text-sm font-medium text-white/80 mb-1\">\n                          Rotation\n                        </div>\n                        <div className=\"text-base sm:text-lg font-semibold text-white\">\n                          -10° to 0°\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ScrollAnimationTrigger>\n              <ScrollAnimationTrigger\n                effect=\"slide\"\n                direction=\"up\"\n                className=\"p-3 sm:p-4 md:p-6\"\n                delay={0.5}\n              >\n                <div className=\"bg-gradient-to-br from-green-50 to-green-100 dark:from-zinc-900 dark:to-zinc-800 p-6 sm:p-8 md:p-10 rounded-2xl sm:rounded-3xl shadow-xl w-full border-t border-l border-green-200/50 dark:border-green-500/20 relative overflow-hidden group\">\n                  <svg\n                    className=\"absolute right-0 top-0 h-full opacity-30 dark:opacity-20\"\n                    viewBox=\"0 0 100 200\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M20 0C20 110.457 110.457 200 0 200\"\n                      stroke=\"#22C55E\"\n                      strokeWidth=\"2\"\n                    />\n                    <path\n                      d=\"M40 0C40 110.457 130.457 200 20 200\"\n                      stroke=\"#22C55E\"\n                      strokeWidth=\"2\"\n                      opacity=\"0.7\"\n                    />\n                    <path\n                      d=\"M60 0C60 110.457 150.457 200 40 200\"\n                      stroke=\"#22C55E\"\n                      strokeWidth=\"2\"\n                      opacity=\"0.4\"\n                    />\n                  </svg>\n\n                  <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 items-center mb-4 sm:mb-6\">\n                    <div className=\"p-3 sm:p-4 bg-white dark:bg-zinc-800 rounded-xl shadow-md border border-green-100 dark:border-green-900/50 relative z-10 group-hover:shadow-green-200 dark:group-hover:shadow-green-900/30 transition-shadow duration-300\">\n                      <div className=\"absolute inset-0 bg-gradient-to-br from-green-500/20 to-green-600/20 dark:from-green-500/10 dark:to-green-600/10 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      <Layers className=\"h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 text-green-500 dark:text-green-400 relative z-10\" />\n                    </div>\n                    <h3 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center sm:text-start text-green-800 dark:text-green-300\">\n                      Slide Up Effect\n                    </h3>\n                  </div>\n\n                  <p className=\"text-green-700/80 dark:text-green-300/90 text-center sm:text-start text-sm sm:text-base md:text-lg leading-relaxed relative z-10 mb-4 sm:mb-6\">\n                    This content slides gracefully into view from below,\n                    creating a smooth transition that guides the eye naturally\n                    as you explore the page content.\n                  </p>\n\n                  <div className=\"flex flex-wrap gap-2 justify-center sm:justify-start mt-4 relative z-10\">\n                    <span className=\"px-3 py-1 bg-green-500/10 dark:bg-green-500/20 text-green-700 dark:text-green-300 rounded-full text-xs font-medium\">\n                      Smooth\n                    </span>\n                    <span className=\"px-3 py-1 bg-green-500/10 dark:bg-green-500/20 text-green-700 dark:text-green-300 rounded-full text-xs font-medium\">\n                      Elegant\n                    </span>\n                    <span className=\"px-3 py-1 bg-green-500/10 dark:bg-green-500/20 text-green-700 dark:text-green-300 rounded-full text-xs font-medium\">\n                      Natural\n                    </span>\n                  </div>\n                </div>\n              </ScrollAnimationTrigger>\n            </div>\n          </div>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n\nexport default ScrollAnimationTriggerDemo;\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "src\\nuvyxui\\components\\scroll-animation-trigger.tsx",
      "content": "\"use client\";\nimport { useRef, useEffect, useState, useMemo, type ReactNode } from \"react\";\nimport {\n  motion,\n  useScroll,\n  useTransform,\n  type MotionValue,\n  type MotionProps,\n} from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface ScrollAnimationTriggerProps {\n  children: ReactNode;\n  className?: string;\n  effect?: \"fade\" | \"scale\" | \"slide\" | \"color\" | \"rotate\" | \"custom\";\n  threshold?: number;\n  delay?: number;\n  duration?: number;\n  direction?: \"up\" | \"down\" | \"left\" | \"right\";\n  once?: boolean;\n  customProps?: MotionProps;\n  as?: keyof typeof motionElementMap;\n  fromColor?: string;\n  toColor?: string;\n  fromRotation?: number;\n  toRotation?: number;\n  fromScale?: number;\n  toScale?: number;\n}\n\nconst motionElementMap = {\n  div: motion.div,\n  span: motion.span,\n  p: motion.p,\n  h1: motion.h1,\n  h2: motion.h2,\n  h3: motion.h3,\n  h4: motion.h4,\n  h5: motion.h5,\n  h6: motion.h6,\n  section: motion.section,\n  article: motion.article,\n  aside: motion.aside,\n  nav: motion.nav,\n  ul: motion.ul,\n  ol: motion.ol,\n  li: motion.li,\n  button: motion.button,\n};\n\ntype MotionElementKey = keyof typeof motionElementMap;\n\nexport function ScrollAnimationTrigger({\n  children,\n  className,\n  effect = \"fade\",\n  threshold = 0.1,\n  delay = 0,\n  duration = 0.5,\n  direction = \"up\",\n  once = false,\n  customProps = {},\n  as = \"div\",\n  fromColor = \"var(--color-muted)\",\n  toColor = \"var(--color-primary)\",\n  fromRotation = direction === \"left\" ? -10 : 10,\n  toRotation = 0,\n  fromScale = 0.8,\n  toScale = 1,\n}: ScrollAnimationTriggerProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const [isInView, setIsInView] = useState(false);\n\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"],\n  });\n\n  const textColor = useTransform(scrollYProgress, [0, 1], [fromColor, toColor]);\n  const rotation = useTransform(\n    scrollYProgress,\n    [0, 1],\n    [fromRotation, toRotation],\n  );\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          setIsInView(true);\n          if (once) observer.disconnect();\n        } else if (!once) {\n          setIsInView(false);\n        }\n      },\n      { threshold },\n    );\n\n    observer.observe(ref.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [threshold, once]);\n\n  const animationProps = useMemo(() => {\n    const baseProps: MotionProps = {\n      transition: { duration, delay, ease: \"easeOut\" },\n    };\n\n    switch (effect) {\n      case \"fade\":\n        baseProps.initial = { opacity: 0 };\n        baseProps.animate = isInView ? { opacity: 1 } : { opacity: 0 };\n        break;\n      case \"scale\":\n        baseProps.initial = { scale: fromScale, opacity: 0 };\n        baseProps.animate = isInView\n          ? { scale: toScale, opacity: 1 }\n          : { scale: fromScale, opacity: 0 };\n        break;\n      case \"slide\":\n        const offset = 50;\n        const directionOffsets = {\n          up: { y: offset, x: 0 },\n          down: { y: -offset, x: 0 },\n          left: { x: offset, y: 0 },\n          right: { x: -offset, y: 0 },\n        };\n        baseProps.initial = { ...directionOffsets[direction], opacity: 0 };\n        baseProps.animate = isInView\n          ? { x: 0, y: 0, opacity: 1 }\n          : { ...directionOffsets[direction], opacity: 0 };\n        break;\n      case \"color\":\n        baseProps.style = { color: textColor };\n        break;\n      case \"rotate\":\n        baseProps.style = {\n          rotate: rotation,\n          opacity: scrollYProgress,\n        };\n        break;\n      case \"custom\":\n        return {\n          ...baseProps,\n          ...customProps,\n          animate: isInView ? customProps.animate : customProps.initial,\n        };\n    }\n    return baseProps;\n  }, [\n    effect,\n    isInView,\n    duration,\n    delay,\n    fromScale,\n    toScale,\n    direction,\n    textColor,\n    rotation,\n    scrollYProgress,\n    customProps,\n  ]);\n\n  const MotionComponent =\n    motionElementMap[as as MotionElementKey] || motion.div;\n\n  return (\n    <div\n      ref={ref}\n      style={{ width: \"100%\", height: \"100%\" }}\n      data-testid=\"scroll-wrapper\"\n    >\n      <MotionComponent\n        className={cn(\"scroll-animation-trigger\", className)}\n        data-testid=\"scroll-animation\"\n        {...animationProps}\n      >\n        {children}\n      </MotionComponent>\n    </div>\n  );\n}\n\nexport function useScrollProgress(options = {}) {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"],\n    ...options,\n  });\n  return { ref, scrollYProgress };\n}\n\nexport function useScrollTransform<T>(\n  scrollYProgress: MotionValue<number>,\n  inputRange = [0, 1] as [number, number],\n  outputRange: [T, T],\n) {\n  return useTransform(scrollYProgress, inputRange, outputRange);\n}\n\nexport function useScrollColor(\n  scrollYProgress: MotionValue<number>,\n  fromColor = \"var(--color-muted)\",\n  toColor = \"var(--color-primary)\",\n) {\n  return useScrollTransform(scrollYProgress, [0, 1], [fromColor, toColor]);\n}\n\nexport function useScrollSize(\n  scrollYProgress: MotionValue<number>,\n  fromSize = 0.8,\n  toSize = 1,\n) {\n  return useScrollTransform(scrollYProgress, [0, 1], [fromSize, toSize]);\n}\n\nexport function useScrollRotation(\n  scrollYProgress: MotionValue<number>,\n  fromRotation = -10,\n  toRotation = 0,\n) {\n  return useScrollTransform(\n    scrollYProgress,\n    [0, 1],\n    [fromRotation, toRotation],\n  );\n}\n\nexport interface ScrollProgressAnimationProps {\n  children:\n    | ReactNode\n    | ((props: { scrollYProgress: MotionValue<number> }) => ReactNode);\n  className?: string;\n  offset?: [string, string];\n}\n\nexport function ScrollProgressAnimation({\n  children,\n  className,\n}: ScrollProgressAnimationProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"],\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\"scroll-progress-animation\", className)}\n      data-testid=\"scroll-progress\"\n    >\n      {typeof children === \"function\"\n        ? children({ scrollYProgress })\n        : children}\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "src\\lib\\utils.ts",
      "content": "import clsx, { ClassValue } from \"clsx\";\nimport { Metadata } from \"next\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function humanize(name: string): string {\n  return name\n    .replace(/-/g, \" \")\n    .replace(/([A-Z])/g, \" $1\")\n    .trim()\n    .split(/\\s+/)\n    .map((word) => word[0].toUpperCase() + word.substring(1).toLowerCase())\n    .join(\" \");\n}\n\nexport const truncate = (str: string | null, length: number) => {\n  if (!str || str.length <= length) return str;\n  return `${str.slice(0, length - 3)}...`;\n};\n\nexport const fetcher = (...args: Parameters<typeof fetch>) =>\n  fetch(...args).then((res) => res.json());\n\nexport const capitalize = (str: string, lower = false) =>\n  (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, (match) =>\n    match.toUpperCase(),\n  );\n\nexport function formatDate(input: string | number): string {\n  const date = new Date(input);\n  return date.toLocaleDateString(\"en-US\", {\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n}\n\nexport function absoluteUrl(path: string) {\n  return `${process.env.NEXT_PUBLIC_APP_URL || \"\"}${path}`;\n}\n\nexport function constructMetadata({\n  title = \"Nuvyx UI - Modern React + Tailwind CSS + Motion components & Templates\",\n  description = \"Nuvyx UI is a curated collection of the best landing page components built using React + Tailwind CSS + Motion\",\n  image = absoluteUrl(\"/og\"),\n  ...props\n}: {\n  title?: string;\n  description?: string;\n  image?: string;\n  [key: string]: Metadata[keyof Metadata];\n}): Metadata {\n  return {\n    title,\n    description,\n    keywords: [\n      \"React\",\n      \"Tailwind CSS\",\n      \"Motion\",\n      \"Landing Page\",\n      \"Components\",\n      \"Next.js\",\n    ],\n    openGraph: {\n      title,\n      description,\n      type: \"website\",\n      images: [\n        {\n          url: image,\n          width: 1200,\n          height: 630,\n        },\n      ],\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title,\n      description,\n      images: [image],\n      creator: \"@mihirjaiswal\",\n    },\n    icons: \"/favicon.ico\",\n    metadataBase: new URL(\"https://nuvyxui.vercel.app/\"),\n    authors: [\n      {\n        name: \"Mihir Jaiswal\",\n        url: \"https://github.com/MihirJaiswal\",\n      },\n    ],\n    creator: \"mihirjaiswal\",\n    ...props,\n  };\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "src\\components\\ui\\scroll-area.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  );\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className,\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  );\n}\n\nexport { ScrollArea, ScrollBar };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}