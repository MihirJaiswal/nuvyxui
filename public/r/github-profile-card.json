{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "github-profile-card",
  "type": "registry:ui",
  "title": "Github Profile Card",
  "description": "A card component that displays a GitHub user's profile information. It includes their avatar, name, bio, and links to their GitHub profile.",
  "dependencies": [
    "lucide-react",
    "lucide-react"
  ],
  "files": [
    {
      "path": "src/nuvyxui/components/github-profile-card.tsx",
      "content": "\"use client\";\nimport { useState, useEffect, useCallback, useMemo } from \"react\";\nimport Link from \"next/link\";\nimport { AtSign, Calendar, ExternalLink, Github, MapPin } from \"lucide-react\";\nimport Image from \"next/image\";\n\nexport type ThemeOption = {\n  id: string;\n  name: string;\n  cardBg: string;\n  cardBorder: string;\n  cardShadow: string;\n  accentColor: string;\n  textPrimary: string;\n  textSecondary: string;\n  badgeBg: string;\n  statsBg: string;\n};\n\nexport const themes: ThemeOption[] = [\n  {\n    id: \"modern-light\",\n    name: \"Modern Light\",\n    cardBg: \"bg-white\",\n    cardBorder: \"border border-gray-100\",\n    cardShadow:\n      \"shadow-lg shadow-gray-200/50 hover:shadow-xl hover:shadow-gray-200/60\",\n    accentColor: \"text-violet-600\",\n    textPrimary: \"text-gray-900\",\n    textSecondary: \"text-gray-500\",\n    badgeBg: \"bg-violet-50\",\n    statsBg: \"bg-gray-50/80\",\n  },\n  {\n    id: \"gradient-blue\",\n    name: \"Gradient Blue\",\n    cardBg:\n      \"bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-950 dark:to-indigo-950\",\n    cardBorder: \"border border-blue-100/80 dark:border-blue-800/30\",\n    cardShadow:\n      \"shadow-lg shadow-blue-200/30 hover:shadow-xl hover:shadow-blue-200/40 dark:shadow-blue-900/20 dark:hover:shadow-blue-900/30\",\n    accentColor: \"text-blue-600 dark:text-blue-400\",\n    textPrimary: \"text-gray-900 dark:text-white\",\n    textSecondary: \"text-gray-600 dark:text-gray-300\",\n    badgeBg: \"bg-blue-100/80 dark:bg-blue-800/30\",\n    statsBg: \"bg-blue-50/50 dark:bg-blue-900/30\",\n  },\n  {\n    id: \"gradient-purple\",\n    name: \"Gradient Purple\",\n    cardBg:\n      \"bg-gradient-to-br from-purple-50 to-fuchsia-50 dark:from-purple-950 dark:to-fuchsia-950\",\n    cardBorder: \"border border-purple-100/80 dark:border-purple-800/30\",\n    cardShadow:\n      \"shadow-lg shadow-purple-200/30 hover:shadow-xl hover:shadow-purple-200/40 dark:shadow-purple-900/20 dark:hover:shadow-purple-900/30\",\n    accentColor: \"text-purple-600 dark:text-purple-400\",\n    textPrimary: \"text-gray-900 dark:text-white\",\n    textSecondary: \"text-gray-600 dark:text-gray-300\",\n    badgeBg: \"bg-purple-100/80 dark:bg-purple-800/30\",\n    statsBg: \"bg-purple-50/50 dark:bg-purple-900/30\",\n  },\n  {\n    id: \"minimal-black\",\n    name: \"Minimal Black\",\n    cardBg: \"bg-black\",\n    cardBorder: \"border border-zinc-800\",\n    cardShadow:\n      \"shadow-lg shadow-black/40 hover:shadow-xl hover:shadow-black/50\",\n    accentColor: \"text-white\",\n    textPrimary: \"text-white\",\n    textSecondary: \"text-zinc-400\",\n    badgeBg: \"bg-zinc-900\",\n    statsBg: \"bg-zinc-900/70\",\n  },\n];\n\nexport type ProfileData = {\n  login: string;\n  name: string;\n  avatarUrl: string;\n  bio?: string;\n  location?: string;\n  followers: number;\n  following: number;\n  publicRepos: number;\n  createdAt: string;\n  languages?: Array<{\n    name: string;\n    color: string;\n    percentage: number;\n  }>;\n  contributionData?: Array<number>;\n};\ninterface GitHubRepo {\n  language: string | null;\n  languages_url: string;\n}\n\ninterface LanguageData {\n  [key: string]: number;\n}\n\ninterface GitHubProfileCardProps {\n  username?: string;\n  githubToken?: string;\n  manualMode?: boolean;\n  profileData?: ProfileData;\n  themeId?: string;\n}\n\nexport function GitHubProfileCard({\n  username,\n  githubToken,\n  manualMode = false,\n  profileData,\n  themeId = \"github-light\",\n}: GitHubProfileCardProps) {\n  const currentTheme = useMemo(\n    () => themes.find((theme) => theme.id === themeId) || themes[0],\n    [themeId],\n  );\n  const [loading, setLoading] = useState(!manualMode);\n  const [error, setError] = useState<string | null>(null);\n  const [profile, setProfile] = useState<ProfileData | null>(\n    manualMode ? profileData || null : null,\n  );\n\n  const fetchProfileData = useCallback(async () => {\n    if (!username) return;\n    setLoading(true);\n    setError(null);\n\n    try {\n      const headers: HeadersInit = {};\n      if (githubToken) {\n        headers.Authorization = `token ${githubToken}`;\n      }\n\n      const profileResponse = await fetch(\n        `https://api.github.com/users/${username}`,\n        { headers },\n      );\n      if (!profileResponse.ok) {\n        throw new Error(\n          `Failed to fetch profile data: ${profileResponse.status}`,\n        );\n      }\n      const profileData = await profileResponse.json();\n\n      const reposResponse = await fetch(\n        `https://api.github.com/users/${username}/repos?per_page=100`,\n        { headers },\n      );\n      if (!reposResponse.ok) {\n        throw new Error(\n          `Failed to fetch repositories: ${reposResponse.status}`,\n        );\n      }\n      const reposData = (await reposResponse.json()) as GitHubRepo[];\n\n      const languageMap = new Map<string, number>();\n      let totalSize = 0;\n\n      await Promise.all(\n        reposData.map(async (repo: GitHubRepo) => {\n          if (!repo.language) return;\n\n          const langResponse = await fetch(repo.languages_url, { headers });\n          if (!langResponse.ok) return;\n\n          const langData = (await langResponse.json()) as LanguageData;\n\n          Object.entries(langData).forEach(\n            ([lang, bytes]: [string, number]) => {\n              const currentBytes = languageMap.get(lang) || 0;\n              languageMap.set(lang, currentBytes + bytes);\n              totalSize += bytes;\n            },\n          );\n        }),\n      );\n\n      const languageColors: Record<string, string> = {\n        JavaScript: \"#f1e05a\",\n        TypeScript: \"#3178c6\",\n        Python: \"#3572A5\",\n        Java: \"#b07219\",\n        Go: \"#00ADD8\",\n        Ruby: \"#701516\",\n        PHP: \"#4F5D95\",\n        C: \"#555555\",\n        \"C++\": \"#f34b7d\",\n        \"C#\": \"#178600\",\n        Swift: \"#ffac45\",\n        Kotlin: \"#A97BFF\",\n        Rust: \"#dea584\",\n        Dart: \"#00B4AB\",\n        HTML: \"#e34c26\",\n        CSS: \"#563d7c\",\n        Shell: \"#89e051\",\n        Jupyter: \"#DA5B0B\",\n        R: \"#198CE7\",\n        Scala: \"#c22d40\",\n      };\n\n      const languages = Array.from(languageMap.entries())\n        .map(([name, bytes]: [string, number]) => ({\n          name,\n          color: languageColors[name] || \"#858585\",\n          percentage: Math.round((bytes / totalSize) * 100),\n        }))\n        .sort((a, b) => b.percentage - a.percentage)\n        .slice(0, 3);\n\n      const contributionData = Array.from({ length: 12 }, () => Math.random());\n\n      const transformedProfile: ProfileData = {\n        login: profileData.login,\n        name: profileData.name || profileData.login,\n        avatarUrl: profileData.avatar_url,\n        bio: profileData.bio || undefined,\n        location: profileData.location || undefined,\n        followers: profileData.followers,\n        following: profileData.following,\n        publicRepos: profileData.public_repos,\n        createdAt: profileData.created_at,\n        languages: languages,\n        contributionData: contributionData,\n      };\n\n      setProfile(transformedProfile);\n      setLoading(false);\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : \"An unknown error occurred\",\n      );\n      setLoading(false);\n    }\n  }, [username, githubToken]);\n\n  useEffect(() => {\n    if (manualMode && profileData) {\n      setProfile(profileData);\n      setLoading(false);\n      return;\n    }\n\n    if (!manualMode && username) {\n      fetchProfileData();\n    }\n  }, [manualMode, profileData, username, fetchProfileData]);\n\n  const formatDate = useCallback((dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n    }).format(date);\n  }, []);\n\n  const getYearsOnGitHub = useCallback((dateString: string) => {\n    const joinDate = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now.getTime() - joinDate.getTime());\n    const diffYears = diffTime / (1000 * 60 * 60 * 24 * 365.25);\n    return Math.floor(diffYears);\n  }, []);\n  const ProfileHeader = useMemo(() => {\n    if (!profile) return null;\n    return (\n      <div className=\"p-4\">\n        <div className=\"flex flex-col items-start gap-3\">\n          <div className=\"flex items-start w-full justify-between\">\n            <div className=\"flex items-start gap-3\">\n              <div className=\"relative flex-shrink-0\">\n                <Image\n                  src={profile.avatarUrl || \"/placeholder.svg\"}\n                  alt={`Profile picture of ${profile.name}`}\n                  width={48}\n                  height={48}\n                  loading=\"lazy\"\n                  quality={100}\n                  className=\"h-12 w-12 rounded-full border-2 border-white/80 dark:border-gray-800/80 shadow-sm object-cover\"\n                />\n              </div>\n              <div>\n                <h2\n                  className={`text-lg font-bold leading-tight truncate ${currentTheme.textPrimary}`}\n                >\n                  {profile.name}\n                </h2>\n                <div\n                  className={`flex items-center text-sm ${currentTheme.textSecondary}`}\n                >\n                  <AtSign className=\"mr-1 h-3 w-3\" aria-hidden=\"true\" />\n                  <span>{profile.login}</span>\n                </div>\n              </div>\n            </div>\n            <Link\n              href={`https://github.com/${profile.login}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={`hidden md:inline-flex items-center gap-1 px-2.5 py-1 text-xs font-medium rounded-full ${currentTheme.accentColor} ${currentTheme.badgeBg} hover:opacity-90 transition-opacity`}\n              aria-label={`Follow ${profile.name} on GitHub`}\n            >\n              <Github className=\"h-3 w-3\" aria-hidden=\"true\" />\n              Follow\n            </Link>\n          </div>\n          {profile.bio && (\n            <p\n              className={`my-2 text-xs line-clamp-2 ${currentTheme.textSecondary}`}\n            >\n              {profile.bio}\n            </p>\n          )}\n        </div>\n        <div className=\"flex flex-wrap items-center gap-x-3 gap-y-1 mt-2 text-xs\">\n          {profile.location && (\n            <div\n              className={`flex items-center gap-1 ${currentTheme.textSecondary}`}\n            >\n              <MapPin className=\"h-3 w-3\" aria-hidden=\"true\" />\n              <span>{profile.location}</span>\n            </div>\n          )}\n          <div\n            className={`flex items-center gap-1 ${currentTheme.textSecondary}`}\n          >\n            <Calendar className=\"h-3 w-3\" aria-hidden=\"true\" />\n            <span>Joined {formatDate(profile.createdAt)}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }, [profile, currentTheme, formatDate]);\n\n  const ProfileStats = useMemo(() => {\n    if (!profile) return null;\n\n    return (\n      <div className=\"px-4 md:max-w-md\">\n        <div\n          className={`flex justify-center gap-4 sm:gap-8 md:gap-20 px-2 sm:px-6 md:px-12 py-2.5 ${currentTheme.statsBg} rounded-md`}\n        >\n          <div className=\"flex flex-col\">\n            <span\n              className={`text-sm sm:text-base text-center font-semibold ${currentTheme.textPrimary}`}\n            >\n              {profile.followers.toLocaleString()}\n            </span>\n            <span\n              className={`text-xs text-center ${currentTheme.textSecondary}`}\n            >\n              followers\n            </span>\n          </div>\n          <div className=\"flex flex-col\">\n            <span\n              className={`text-sm sm:text-base text-center font-semibold ${currentTheme.textPrimary}`}\n            >\n              {profile.following.toLocaleString()}\n            </span>\n            <span\n              className={`text-xs text-center ${currentTheme.textSecondary}`}\n            >\n              following\n            </span>\n          </div>\n          <div className=\"flex flex-col\">\n            <span\n              className={`text-sm sm:text-base text-center font-semibold ${currentTheme.textPrimary}`}\n            >\n              {profile.publicRepos.toLocaleString()}\n            </span>\n            <span\n              className={`text-xs text-center ${currentTheme.textSecondary}`}\n            >\n              repositories\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }, [profile, currentTheme]);\n\n  const ActivityGraph = useMemo(() => {\n    if (!profile?.contributionData || profile.contributionData.length === 0)\n      return null;\n\n    return (\n      <div className=\"px-4 pt-3\">\n        <h3\n          className={`text-xs font-medium uppercase mb-1.5 ${currentTheme.textSecondary}`}\n        >\n          Activity\n        </h3>\n        <div\n          className={`h-[36px] w-full overflow-hidden rounded-md ${currentTheme.badgeBg} p-2`}\n          aria-label=\"Contribution activity over time\"\n          role=\"img\"\n        >\n          <svg\n            className=\"h-full w-full\"\n            viewBox=\"0 0 100 30\"\n            preserveAspectRatio=\"none\"\n          >\n            <polyline\n              points={profile.contributionData\n                .map(\n                  (value, index) =>\n                    `${index * (100 / (profile.contributionData?.length || 1))},${30 - value * 30}`,\n                )\n                .join(\" \")}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className={currentTheme.accentColor}\n            />\n            <path\n              d={`M0,30 ${profile.contributionData\n                .map(\n                  (value, index) =>\n                    `L${index * (100 / (profile.contributionData?.length || 1))},${30 - value * 30}`,\n                )\n                .join(\" \")} L100,30 Z`}\n              fill=\"currentColor\"\n              className={`${currentTheme.accentColor} opacity-10`}\n            />\n          </svg>\n        </div>\n      </div>\n    );\n  }, [profile?.contributionData, currentTheme]);\n\n  const Languages = useMemo(() => {\n    if (!profile?.languages || profile.languages.length === 0) return null;\n\n    return (\n      <div className=\"px-4 py-3\">\n        <h3\n          className={`text-xs font-medium uppercase mb-1.5 ${currentTheme.textSecondary}`}\n        >\n          Top Languages\n        </h3>\n        <div className=\"space-y-2\">\n          {profile.languages.slice(0, 3).map((item, index) => (\n            <div key={index} className=\"space-y-1\">\n              <div className=\"flex items-center justify-between text-xs\">\n                <div className=\"flex items-center gap-1.5\">\n                  <div\n                    className=\"h-2 w-2 rounded-full\"\n                    style={{ backgroundColor: item.color }}\n                    aria-hidden=\"true\"\n                  />\n                  <span className={`font-medium ${currentTheme.textPrimary}`}>\n                    {item.name}\n                  </span>\n                </div>\n                <span className={`font-medium ${currentTheme.textPrimary}`}>\n                  {item.percentage}%\n                </span>\n              </div>\n              <div\n                className=\"relative h-1.5 w-full overflow-hidden rounded-full bg-gray-200/30 dark:bg-gray-700/30\"\n                role=\"progressbar\"\n                aria-valuenow={item.percentage}\n                aria-valuemin={0}\n                aria-valuemax={100}\n                aria-label={`${item.name} ${item.percentage}%`}\n              >\n                <div\n                  className=\"absolute h-full rounded-full\"\n                  style={{\n                    backgroundColor: item.color,\n                    width: `${item.percentage}%`,\n                  }}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }, [profile?.languages, currentTheme]);\n\n  const Footer = useMemo(() => {\n    if (!profile) return null;\n\n    return (\n      <div\n        className={`flex items-center justify-between px-4 py-2 ${\n          currentTheme.cardBorder.includes(\"border-\")\n            ? currentTheme.cardBorder.split(\" \")[1]\n            : \"border-gray-100\"\n        }`}\n      >\n        <span className={`text-xs ${currentTheme.textSecondary}`}>\n          {getYearsOnGitHub(profile.createdAt)} years on GitHub\n        </span>\n        <Link\n          href={`https://github.com/${profile.login}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={`p-1 rounded-full hover:bg-gray-100/50 dark:hover:bg-gray-800/50 ${currentTheme.textSecondary} transition-colors`}\n          aria-label=\"View full GitHub profile\"\n        >\n          <ExternalLink className=\"h-3.5 w-3.5\" aria-hidden=\"true\" />\n        </Link>\n      </div>\n    );\n  }, [profile, currentTheme, getYearsOnGitHub]);\n\n  if (loading) {\n    return (\n      <div\n        className={`w-full max-w-md rounded-md ${currentTheme.cardBg} ${currentTheme.cardBorder} ${currentTheme.cardShadow} overflow-hidden transition-all duration-300 p-1 md:p-2`}\n        role=\"alert\"\n        aria-busy=\"true\"\n        aria-live=\"polite\"\n      >\n        <div className=\"p-4\">\n          <div className=\"flex flex-col items-start gap-3\">\n            <div className=\"flex items-start w-full justify-between\">\n              <div className=\"flex items-start gap-3\">\n                <div className=\"relative flex-shrink-0\">\n                  <div className=\"h-12 w-12 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\" />\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"h-5 w-32 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                  <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                </div>\n              </div>\n              <div className=\"hidden md:block h-6 w-20 bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\" />\n            </div>\n            <div className=\"h-4 w-full max-w-xs bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          </div>\n          <div className=\"flex flex-wrap items-center gap-x-3 gap-y-1 mt-2\">\n            <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n            <div className=\"h-4 w-28 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          </div>\n        </div>\n        <div className=\"px-4 md:max-w-md\">\n          <div\n            className={`flex justify-center gap-4 sm:gap-8 md:gap-20 px-2 sm:px-6 md:px-12 py-4 ${currentTheme.statsBg} rounded-md`}\n          >\n            {[1, 2, 3].map((item) => (\n              <div key={item} className=\"flex flex-col items-center gap-1\">\n                <div className=\"h-5 w-10 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                <div className=\"h-3 w-14 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"px-4 pt-3\">\n          <div className=\"h-4 w-16 bg-gray-200 dark:bg-gray-700 rounded animate-pulse mb-2\" />\n          <div\n            className={`h-[36px] w-full rounded-md ${currentTheme.badgeBg} animate-pulse`}\n          />\n        </div>\n        <div className=\"px-4 py-3\">\n          <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse mb-2\" />\n          <div className=\"space-y-3\">\n            {[1, 2, 3].map((item) => (\n              <div key={item} className=\"space-y-1\">\n                <div className=\"flex justify-between\">\n                  <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                  <div className=\"h-4 w-8 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                </div>\n                <div className=\"h-1.5 w-full bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\" />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div\n          className={`flex items-center justify-between px-4 py-2 ${currentTheme.cardBorder.includes(\"border-\") ? currentTheme.cardBorder.split(\" \")[1] : \"border-gray-100\"}`}\n        >\n          <div className=\"h-3 w-28 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          <div className=\"h-4 w-4 bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\" />\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div\n        className={`w-full max-w-md rounded-md ${currentTheme.cardBg} ${currentTheme.cardBorder} ${currentTheme.cardShadow} overflow-hidden transition-all duration-300 p-1 md:p-2`}\n        role=\"alert\"\n        aria-live=\"assertive\"\n      >\n        <div className=\"p-6 flex flex-col items-center justify-center\">\n          <div className={`rounded-full p-3 ${currentTheme.badgeBg} mb-3`}>\n            <svg\n              className={`h-8 w-8 ${currentTheme.accentColor}`}\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n              />\n            </svg>\n          </div>\n          <h3\n            className={`text-lg font-semibold ${currentTheme.textPrimary} mb-1 text-center`}\n          >\n            Profile Not Found\n          </h3>\n          <p\n            className={`text-sm ${currentTheme.textSecondary} text-center mb-4`}\n          >\n            {error.includes(\"404\")\n              ? \"This GitHub username doesn't exist or is not publicly available.\"\n              : error}\n          </p>\n          <button\n            onClick={() => {\n              if (username) fetchProfileData();\n            }}\n            className={`inline-flex items-center justify-center gap-2 px-4 py-2 text-sm font-medium rounded-md ${currentTheme.accentColor} ${currentTheme.badgeBg} hover:opacity-90 transition-opacity`}\n          >\n            <svg\n              className=\"h-4 w-4\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            </svg>\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile) return null;\n  return (\n    <div\n      className={`w-full max-w-md rounded-md ${currentTheme.cardBg} ${currentTheme.cardBorder} ${currentTheme.cardShadow} overflow-hidden transition-all duration-300 p-1 md:p-2`}\n      role=\"region\"\n      aria-label={`GitHub profile for ${profile.name}`}\n    >\n      {ProfileHeader}\n      {ProfileStats}\n      {ActivityGraph}\n      {Languages}\n      {Footer}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ui/github-profile-card.tsx"
    },
    {
      "path": "src\\nuvyxui\\components\\github-profile-card.tsx",
      "content": "\"use client\";\nimport { useState, useEffect, useCallback, useMemo } from \"react\";\nimport Link from \"next/link\";\nimport { AtSign, Calendar, ExternalLink, Github, MapPin } from \"lucide-react\";\nimport Image from \"next/image\";\n\nexport type ThemeOption = {\n  id: string;\n  name: string;\n  cardBg: string;\n  cardBorder: string;\n  cardShadow: string;\n  accentColor: string;\n  textPrimary: string;\n  textSecondary: string;\n  badgeBg: string;\n  statsBg: string;\n};\n\nexport const themes: ThemeOption[] = [\n  {\n    id: \"modern-light\",\n    name: \"Modern Light\",\n    cardBg: \"bg-white\",\n    cardBorder: \"border border-gray-100\",\n    cardShadow:\n      \"shadow-lg shadow-gray-200/50 hover:shadow-xl hover:shadow-gray-200/60\",\n    accentColor: \"text-violet-600\",\n    textPrimary: \"text-gray-900\",\n    textSecondary: \"text-gray-500\",\n    badgeBg: \"bg-violet-50\",\n    statsBg: \"bg-gray-50/80\",\n  },\n  {\n    id: \"gradient-blue\",\n    name: \"Gradient Blue\",\n    cardBg:\n      \"bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-950 dark:to-indigo-950\",\n    cardBorder: \"border border-blue-100/80 dark:border-blue-800/30\",\n    cardShadow:\n      \"shadow-lg shadow-blue-200/30 hover:shadow-xl hover:shadow-blue-200/40 dark:shadow-blue-900/20 dark:hover:shadow-blue-900/30\",\n    accentColor: \"text-blue-600 dark:text-blue-400\",\n    textPrimary: \"text-gray-900 dark:text-white\",\n    textSecondary: \"text-gray-600 dark:text-gray-300\",\n    badgeBg: \"bg-blue-100/80 dark:bg-blue-800/30\",\n    statsBg: \"bg-blue-50/50 dark:bg-blue-900/30\",\n  },\n  {\n    id: \"gradient-purple\",\n    name: \"Gradient Purple\",\n    cardBg:\n      \"bg-gradient-to-br from-purple-50 to-fuchsia-50 dark:from-purple-950 dark:to-fuchsia-950\",\n    cardBorder: \"border border-purple-100/80 dark:border-purple-800/30\",\n    cardShadow:\n      \"shadow-lg shadow-purple-200/30 hover:shadow-xl hover:shadow-purple-200/40 dark:shadow-purple-900/20 dark:hover:shadow-purple-900/30\",\n    accentColor: \"text-purple-600 dark:text-purple-400\",\n    textPrimary: \"text-gray-900 dark:text-white\",\n    textSecondary: \"text-gray-600 dark:text-gray-300\",\n    badgeBg: \"bg-purple-100/80 dark:bg-purple-800/30\",\n    statsBg: \"bg-purple-50/50 dark:bg-purple-900/30\",\n  },\n  {\n    id: \"minimal-black\",\n    name: \"Minimal Black\",\n    cardBg: \"bg-black\",\n    cardBorder: \"border border-zinc-800\",\n    cardShadow:\n      \"shadow-lg shadow-black/40 hover:shadow-xl hover:shadow-black/50\",\n    accentColor: \"text-white\",\n    textPrimary: \"text-white\",\n    textSecondary: \"text-zinc-400\",\n    badgeBg: \"bg-zinc-900\",\n    statsBg: \"bg-zinc-900/70\",\n  },\n];\n\nexport type ProfileData = {\n  login: string;\n  name: string;\n  avatarUrl: string;\n  bio?: string;\n  location?: string;\n  followers: number;\n  following: number;\n  publicRepos: number;\n  createdAt: string;\n  languages?: Array<{\n    name: string;\n    color: string;\n    percentage: number;\n  }>;\n  contributionData?: Array<number>;\n};\ninterface GitHubRepo {\n  language: string | null;\n  languages_url: string;\n}\n\ninterface LanguageData {\n  [key: string]: number;\n}\n\ninterface GitHubProfileCardProps {\n  username?: string;\n  githubToken?: string;\n  manualMode?: boolean;\n  profileData?: ProfileData;\n  themeId?: string;\n}\n\nexport function GitHubProfileCard({\n  username,\n  githubToken,\n  manualMode = false,\n  profileData,\n  themeId = \"github-light\",\n}: GitHubProfileCardProps) {\n  const currentTheme = useMemo(\n    () => themes.find((theme) => theme.id === themeId) || themes[0],\n    [themeId],\n  );\n  const [loading, setLoading] = useState(!manualMode);\n  const [error, setError] = useState<string | null>(null);\n  const [profile, setProfile] = useState<ProfileData | null>(\n    manualMode ? profileData || null : null,\n  );\n\n  const fetchProfileData = useCallback(async () => {\n    if (!username) return;\n    setLoading(true);\n    setError(null);\n\n    try {\n      const headers: HeadersInit = {};\n      if (githubToken) {\n        headers.Authorization = `token ${githubToken}`;\n      }\n\n      const profileResponse = await fetch(\n        `https://api.github.com/users/${username}`,\n        { headers },\n      );\n      if (!profileResponse.ok) {\n        throw new Error(\n          `Failed to fetch profile data: ${profileResponse.status}`,\n        );\n      }\n      const profileData = await profileResponse.json();\n\n      const reposResponse = await fetch(\n        `https://api.github.com/users/${username}/repos?per_page=100`,\n        { headers },\n      );\n      if (!reposResponse.ok) {\n        throw new Error(\n          `Failed to fetch repositories: ${reposResponse.status}`,\n        );\n      }\n      const reposData = (await reposResponse.json()) as GitHubRepo[];\n\n      const languageMap = new Map<string, number>();\n      let totalSize = 0;\n\n      await Promise.all(\n        reposData.map(async (repo: GitHubRepo) => {\n          if (!repo.language) return;\n\n          const langResponse = await fetch(repo.languages_url, { headers });\n          if (!langResponse.ok) return;\n\n          const langData = (await langResponse.json()) as LanguageData;\n\n          Object.entries(langData).forEach(\n            ([lang, bytes]: [string, number]) => {\n              const currentBytes = languageMap.get(lang) || 0;\n              languageMap.set(lang, currentBytes + bytes);\n              totalSize += bytes;\n            },\n          );\n        }),\n      );\n\n      const languageColors: Record<string, string> = {\n        JavaScript: \"#f1e05a\",\n        TypeScript: \"#3178c6\",\n        Python: \"#3572A5\",\n        Java: \"#b07219\",\n        Go: \"#00ADD8\",\n        Ruby: \"#701516\",\n        PHP: \"#4F5D95\",\n        C: \"#555555\",\n        \"C++\": \"#f34b7d\",\n        \"C#\": \"#178600\",\n        Swift: \"#ffac45\",\n        Kotlin: \"#A97BFF\",\n        Rust: \"#dea584\",\n        Dart: \"#00B4AB\",\n        HTML: \"#e34c26\",\n        CSS: \"#563d7c\",\n        Shell: \"#89e051\",\n        Jupyter: \"#DA5B0B\",\n        R: \"#198CE7\",\n        Scala: \"#c22d40\",\n      };\n\n      const languages = Array.from(languageMap.entries())\n        .map(([name, bytes]: [string, number]) => ({\n          name,\n          color: languageColors[name] || \"#858585\",\n          percentage: Math.round((bytes / totalSize) * 100),\n        }))\n        .sort((a, b) => b.percentage - a.percentage)\n        .slice(0, 3);\n\n      const contributionData = Array.from({ length: 12 }, () => Math.random());\n\n      const transformedProfile: ProfileData = {\n        login: profileData.login,\n        name: profileData.name || profileData.login,\n        avatarUrl: profileData.avatar_url,\n        bio: profileData.bio || undefined,\n        location: profileData.location || undefined,\n        followers: profileData.followers,\n        following: profileData.following,\n        publicRepos: profileData.public_repos,\n        createdAt: profileData.created_at,\n        languages: languages,\n        contributionData: contributionData,\n      };\n\n      setProfile(transformedProfile);\n      setLoading(false);\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : \"An unknown error occurred\",\n      );\n      setLoading(false);\n    }\n  }, [username, githubToken]);\n\n  useEffect(() => {\n    if (manualMode && profileData) {\n      setProfile(profileData);\n      setLoading(false);\n      return;\n    }\n\n    if (!manualMode && username) {\n      fetchProfileData();\n    }\n  }, [manualMode, profileData, username, fetchProfileData]);\n\n  const formatDate = useCallback((dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n    }).format(date);\n  }, []);\n\n  const getYearsOnGitHub = useCallback((dateString: string) => {\n    const joinDate = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now.getTime() - joinDate.getTime());\n    const diffYears = diffTime / (1000 * 60 * 60 * 24 * 365.25);\n    return Math.floor(diffYears);\n  }, []);\n  const ProfileHeader = useMemo(() => {\n    if (!profile) return null;\n    return (\n      <div className=\"p-4\">\n        <div className=\"flex flex-col items-start gap-3\">\n          <div className=\"flex items-start w-full justify-between\">\n            <div className=\"flex items-start gap-3\">\n              <div className=\"relative flex-shrink-0\">\n                <Image\n                  src={profile.avatarUrl || \"/placeholder.svg\"}\n                  alt={`Profile picture of ${profile.name}`}\n                  width={48}\n                  height={48}\n                  loading=\"lazy\"\n                  quality={100}\n                  className=\"h-12 w-12 rounded-full border-2 border-white/80 dark:border-gray-800/80 shadow-sm object-cover\"\n                />\n              </div>\n              <div>\n                <h2\n                  className={`text-lg font-bold leading-tight truncate ${currentTheme.textPrimary}`}\n                >\n                  {profile.name}\n                </h2>\n                <div\n                  className={`flex items-center text-sm ${currentTheme.textSecondary}`}\n                >\n                  <AtSign className=\"mr-1 h-3 w-3\" aria-hidden=\"true\" />\n                  <span>{profile.login}</span>\n                </div>\n              </div>\n            </div>\n            <Link\n              href={`https://github.com/${profile.login}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={`hidden md:inline-flex items-center gap-1 px-2.5 py-1 text-xs font-medium rounded-full ${currentTheme.accentColor} ${currentTheme.badgeBg} hover:opacity-90 transition-opacity`}\n              aria-label={`Follow ${profile.name} on GitHub`}\n            >\n              <Github className=\"h-3 w-3\" aria-hidden=\"true\" />\n              Follow\n            </Link>\n          </div>\n          {profile.bio && (\n            <p\n              className={`my-2 text-xs line-clamp-2 ${currentTheme.textSecondary}`}\n            >\n              {profile.bio}\n            </p>\n          )}\n        </div>\n        <div className=\"flex flex-wrap items-center gap-x-3 gap-y-1 mt-2 text-xs\">\n          {profile.location && (\n            <div\n              className={`flex items-center gap-1 ${currentTheme.textSecondary}`}\n            >\n              <MapPin className=\"h-3 w-3\" aria-hidden=\"true\" />\n              <span>{profile.location}</span>\n            </div>\n          )}\n          <div\n            className={`flex items-center gap-1 ${currentTheme.textSecondary}`}\n          >\n            <Calendar className=\"h-3 w-3\" aria-hidden=\"true\" />\n            <span>Joined {formatDate(profile.createdAt)}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }, [profile, currentTheme, formatDate]);\n\n  const ProfileStats = useMemo(() => {\n    if (!profile) return null;\n\n    return (\n      <div className=\"px-4 md:max-w-md\">\n        <div\n          className={`flex justify-center gap-4 sm:gap-8 md:gap-20 px-2 sm:px-6 md:px-12 py-2.5 ${currentTheme.statsBg} rounded-md`}\n        >\n          <div className=\"flex flex-col\">\n            <span\n              className={`text-sm sm:text-base text-center font-semibold ${currentTheme.textPrimary}`}\n            >\n              {profile.followers.toLocaleString()}\n            </span>\n            <span\n              className={`text-xs text-center ${currentTheme.textSecondary}`}\n            >\n              followers\n            </span>\n          </div>\n          <div className=\"flex flex-col\">\n            <span\n              className={`text-sm sm:text-base text-center font-semibold ${currentTheme.textPrimary}`}\n            >\n              {profile.following.toLocaleString()}\n            </span>\n            <span\n              className={`text-xs text-center ${currentTheme.textSecondary}`}\n            >\n              following\n            </span>\n          </div>\n          <div className=\"flex flex-col\">\n            <span\n              className={`text-sm sm:text-base text-center font-semibold ${currentTheme.textPrimary}`}\n            >\n              {profile.publicRepos.toLocaleString()}\n            </span>\n            <span\n              className={`text-xs text-center ${currentTheme.textSecondary}`}\n            >\n              repositories\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }, [profile, currentTheme]);\n\n  const ActivityGraph = useMemo(() => {\n    if (!profile?.contributionData || profile.contributionData.length === 0)\n      return null;\n\n    return (\n      <div className=\"px-4 pt-3\">\n        <h3\n          className={`text-xs font-medium uppercase mb-1.5 ${currentTheme.textSecondary}`}\n        >\n          Activity\n        </h3>\n        <div\n          className={`h-[36px] w-full overflow-hidden rounded-md ${currentTheme.badgeBg} p-2`}\n          aria-label=\"Contribution activity over time\"\n          role=\"img\"\n        >\n          <svg\n            className=\"h-full w-full\"\n            viewBox=\"0 0 100 30\"\n            preserveAspectRatio=\"none\"\n          >\n            <polyline\n              points={profile.contributionData\n                .map(\n                  (value, index) =>\n                    `${index * (100 / (profile.contributionData?.length || 1))},${30 - value * 30}`,\n                )\n                .join(\" \")}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className={currentTheme.accentColor}\n            />\n            <path\n              d={`M0,30 ${profile.contributionData\n                .map(\n                  (value, index) =>\n                    `L${index * (100 / (profile.contributionData?.length || 1))},${30 - value * 30}`,\n                )\n                .join(\" \")} L100,30 Z`}\n              fill=\"currentColor\"\n              className={`${currentTheme.accentColor} opacity-10`}\n            />\n          </svg>\n        </div>\n      </div>\n    );\n  }, [profile?.contributionData, currentTheme]);\n\n  const Languages = useMemo(() => {\n    if (!profile?.languages || profile.languages.length === 0) return null;\n\n    return (\n      <div className=\"px-4 py-3\">\n        <h3\n          className={`text-xs font-medium uppercase mb-1.5 ${currentTheme.textSecondary}`}\n        >\n          Top Languages\n        </h3>\n        <div className=\"space-y-2\">\n          {profile.languages.slice(0, 3).map((item, index) => (\n            <div key={index} className=\"space-y-1\">\n              <div className=\"flex items-center justify-between text-xs\">\n                <div className=\"flex items-center gap-1.5\">\n                  <div\n                    className=\"h-2 w-2 rounded-full\"\n                    style={{ backgroundColor: item.color }}\n                    aria-hidden=\"true\"\n                  />\n                  <span className={`font-medium ${currentTheme.textPrimary}`}>\n                    {item.name}\n                  </span>\n                </div>\n                <span className={`font-medium ${currentTheme.textPrimary}`}>\n                  {item.percentage}%\n                </span>\n              </div>\n              <div\n                className=\"relative h-1.5 w-full overflow-hidden rounded-full bg-gray-200/30 dark:bg-gray-700/30\"\n                role=\"progressbar\"\n                aria-valuenow={item.percentage}\n                aria-valuemin={0}\n                aria-valuemax={100}\n                aria-label={`${item.name} ${item.percentage}%`}\n              >\n                <div\n                  className=\"absolute h-full rounded-full\"\n                  style={{\n                    backgroundColor: item.color,\n                    width: `${item.percentage}%`,\n                  }}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }, [profile?.languages, currentTheme]);\n\n  const Footer = useMemo(() => {\n    if (!profile) return null;\n\n    return (\n      <div\n        className={`flex items-center justify-between px-4 py-2 ${\n          currentTheme.cardBorder.includes(\"border-\")\n            ? currentTheme.cardBorder.split(\" \")[1]\n            : \"border-gray-100\"\n        }`}\n      >\n        <span className={`text-xs ${currentTheme.textSecondary}`}>\n          {getYearsOnGitHub(profile.createdAt)} years on GitHub\n        </span>\n        <Link\n          href={`https://github.com/${profile.login}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={`p-1 rounded-full hover:bg-gray-100/50 dark:hover:bg-gray-800/50 ${currentTheme.textSecondary} transition-colors`}\n          aria-label=\"View full GitHub profile\"\n        >\n          <ExternalLink className=\"h-3.5 w-3.5\" aria-hidden=\"true\" />\n        </Link>\n      </div>\n    );\n  }, [profile, currentTheme, getYearsOnGitHub]);\n\n  if (loading) {\n    return (\n      <div\n        className={`w-full max-w-md rounded-md ${currentTheme.cardBg} ${currentTheme.cardBorder} ${currentTheme.cardShadow} overflow-hidden transition-all duration-300 p-1 md:p-2`}\n        role=\"alert\"\n        aria-busy=\"true\"\n        aria-live=\"polite\"\n      >\n        <div className=\"p-4\">\n          <div className=\"flex flex-col items-start gap-3\">\n            <div className=\"flex items-start w-full justify-between\">\n              <div className=\"flex items-start gap-3\">\n                <div className=\"relative flex-shrink-0\">\n                  <div className=\"h-12 w-12 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\" />\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"h-5 w-32 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                  <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                </div>\n              </div>\n              <div className=\"hidden md:block h-6 w-20 bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\" />\n            </div>\n            <div className=\"h-4 w-full max-w-xs bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          </div>\n          <div className=\"flex flex-wrap items-center gap-x-3 gap-y-1 mt-2\">\n            <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n            <div className=\"h-4 w-28 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          </div>\n        </div>\n        <div className=\"px-4 md:max-w-md\">\n          <div\n            className={`flex justify-center gap-4 sm:gap-8 md:gap-20 px-2 sm:px-6 md:px-12 py-4 ${currentTheme.statsBg} rounded-md`}\n          >\n            {[1, 2, 3].map((item) => (\n              <div key={item} className=\"flex flex-col items-center gap-1\">\n                <div className=\"h-5 w-10 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                <div className=\"h-3 w-14 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"px-4 pt-3\">\n          <div className=\"h-4 w-16 bg-gray-200 dark:bg-gray-700 rounded animate-pulse mb-2\" />\n          <div\n            className={`h-[36px] w-full rounded-md ${currentTheme.badgeBg} animate-pulse`}\n          />\n        </div>\n        <div className=\"px-4 py-3\">\n          <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse mb-2\" />\n          <div className=\"space-y-3\">\n            {[1, 2, 3].map((item) => (\n              <div key={item} className=\"space-y-1\">\n                <div className=\"flex justify-between\">\n                  <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                  <div className=\"h-4 w-8 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n                </div>\n                <div className=\"h-1.5 w-full bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\" />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div\n          className={`flex items-center justify-between px-4 py-2 ${currentTheme.cardBorder.includes(\"border-\") ? currentTheme.cardBorder.split(\" \")[1] : \"border-gray-100\"}`}\n        >\n          <div className=\"h-3 w-28 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          <div className=\"h-4 w-4 bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\" />\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div\n        className={`w-full max-w-md rounded-md ${currentTheme.cardBg} ${currentTheme.cardBorder} ${currentTheme.cardShadow} overflow-hidden transition-all duration-300 p-1 md:p-2`}\n        role=\"alert\"\n        aria-live=\"assertive\"\n      >\n        <div className=\"p-6 flex flex-col items-center justify-center\">\n          <div className={`rounded-full p-3 ${currentTheme.badgeBg} mb-3`}>\n            <svg\n              className={`h-8 w-8 ${currentTheme.accentColor}`}\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n              />\n            </svg>\n          </div>\n          <h3\n            className={`text-lg font-semibold ${currentTheme.textPrimary} mb-1 text-center`}\n          >\n            Profile Not Found\n          </h3>\n          <p\n            className={`text-sm ${currentTheme.textSecondary} text-center mb-4`}\n          >\n            {error.includes(\"404\")\n              ? \"This GitHub username doesn't exist or is not publicly available.\"\n              : error}\n          </p>\n          <button\n            onClick={() => {\n              if (username) fetchProfileData();\n            }}\n            className={`inline-flex items-center justify-center gap-2 px-4 py-2 text-sm font-medium rounded-md ${currentTheme.accentColor} ${currentTheme.badgeBg} hover:opacity-90 transition-opacity`}\n          >\n            <svg\n              className=\"h-4 w-4\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            </svg>\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile) return null;\n  return (\n    <div\n      className={`w-full max-w-md rounded-md ${currentTheme.cardBg} ${currentTheme.cardBorder} ${currentTheme.cardShadow} overflow-hidden transition-all duration-300 p-1 md:p-2`}\n      role=\"region\"\n      aria-label={`GitHub profile for ${profile.name}`}\n    >\n      {ProfileHeader}\n      {ProfileStats}\n      {ActivityGraph}\n      {Languages}\n      {Footer}\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}