{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "github-repo-card-demo",
  "type": "registry:example",
  "title": "Github Repo Card Demo",
  "description": "Example showing a GitHub repo card.",
  "dependencies": [
    "lucide-react",
    "clsx",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "https://nuvyxui.vercel.app/r/github-repo-card.json"
  ],
  "files": [
    {
      "path": "src/nuvyxui/demos/github-repo-card-demo.tsx",
      "content": "import { GitHubRepoCard } from \"@/nuvyxui/components/github-repo-card\";\nexport default function GitHubRepoCardDemo() {\n  return (\n    <div className=\"max-w-md relative\">\n      <GitHubRepoCard\n        manualMode={true}\n        themeId=\"midnight\"\n        repoData={{\n          name: \"shadcn-ui\",\n          fullName: \"shadcn/ui\",\n          description:\n            \"Beautifully designed components built with Radix UI and Tailwind CSS.\",\n          owner: {\n            login: \"shadcn\",\n            avatarUrl: \"https://avatars.githubusercontent.com/u/124599?v=4\",\n          },\n          stars: 42000,\n          forks: 3600,\n          watchers: 1600,\n          issues: 310,\n          language: \"TypeScript\",\n          languageColor: \"#3178c6\",\n          updatedAt: \"2025-04-07T14:18:57Z\",\n          topics: [\"ui\", \"components\", \"tailwindcss\", \"radix\"],\n          activityData: [\n            0.4, 0.5, 0.6, 0.8, 0.7, 0.9, 1.0, 0.9, 0.8, 0.7, 0.9, 1.0,\n          ],\n          isPrivate: false,\n        }}\n      />\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/github-repo-card-demo.tsx"
    },
    {
      "path": "src\\nuvyxui\\demos\\github-repo-card-demo.tsx",
      "content": "import { GitHubRepoCard } from \"@/nuvyxui/components/github-repo-card\";\nexport default function GitHubRepoCardDemo() {\n  return (\n    <div className=\"max-w-md relative\">\n      <GitHubRepoCard\n        manualMode={true}\n        themeId=\"midnight\"\n        repoData={{\n          name: \"shadcn-ui\",\n          fullName: \"shadcn/ui\",\n          description:\n            \"Beautifully designed components built with Radix UI and Tailwind CSS.\",\n          owner: {\n            login: \"shadcn\",\n            avatarUrl: \"https://avatars.githubusercontent.com/u/124599?v=4\",\n          },\n          stars: 42000,\n          forks: 3600,\n          watchers: 1600,\n          issues: 310,\n          language: \"TypeScript\",\n          languageColor: \"#3178c6\",\n          updatedAt: \"2025-04-07T14:18:57Z\",\n          topics: [\"ui\", \"components\", \"tailwindcss\", \"radix\"],\n          activityData: [\n            0.4, 0.5, 0.6, 0.8, 0.7, 0.9, 1.0, 0.9, 0.8, 0.7, 0.9, 1.0,\n          ],\n          isPrivate: false,\n        }}\n      />\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "src\\nuvyxui\\components\\github-repo-card.tsx",
      "content": "\"use client\";\nimport { useState, useEffect, useCallback, useMemo } from \"react\";\nimport Link from \"next/link\";\nimport {\n  BookOpen,\n  Code,\n  Eye,\n  Github,\n  History,\n  Star,\n  GitFork,\n  AlertCircle,\n  Check,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport Image from \"next/image\";\n\nconst LANGUAGE_COLORS = {\n  JavaScript: \"#f1e05a\",\n  TypeScript: \"#3178c6\",\n  Python: \"#3572A5\",\n  Java: \"#b07219\",\n  Go: \"#00ADD8\",\n  Rust: \"#dea584\",\n  C: \"#555555\",\n  \"C++\": \"#f34b7d\",\n  \"C#\": \"#178600\",\n  PHP: \"#4F5D95\",\n  Ruby: \"#701516\",\n  Swift: \"#F05138\",\n  Kotlin: \"#A97BFF\",\n  Dart: \"#00B4AB\",\n  HTML: \"#e34c26\",\n  CSS: \"#563d7c\",\n  Shell: \"#89e051\",\n};\n\nexport type ThemeOption = {\n  id: string;\n  name: string;\n  description: string;\n  cardBg: string;\n  cardBorder: string;\n  cardHoverShadow: string;\n  accentColor: string;\n  accentColorLight: string;\n  graphColor: string;\n  graphBgColor: string;\n  badgeBg: string;\n  badgeText: string;\n  textMuted: string;\n  textNormal: string;\n};\n\nexport const themes: ThemeOption[] = [\n  {\n    id: \"modern-dark\",\n    name: \"Modern Dark\",\n    description: \"Sleek dark theme with blue accents\",\n    cardBg: \"bg-gradient-to-br from-slate-900 to-slate-800\",\n    cardBorder: \"border border-slate-700/50\",\n    cardHoverShadow:\n      \"hover:shadow-lg hover:shadow-blue-500/10 transition-all duration-300\",\n    accentColor: \"text-blue-400\",\n    accentColorLight: \"text-blue-400/10\",\n    graphColor: \"text-blue-400\",\n    graphBgColor: \"text-blue-400/10\",\n    badgeBg: \"bg-slate-800/80 backdrop-blur-sm\",\n    badgeText: \"text-blue-300\",\n    textMuted: \"text-slate-400\",\n    textNormal: \"text-slate-200\",\n  },\n  {\n    id: \"modern-light\",\n    name: \"Modern Light\",\n    description: \"Clean light theme with subtle shadows\",\n    cardBg: \"bg-gradient-to-br from-white to-slate-50\",\n    cardBorder: \"border border-slate-200\",\n    cardHoverShadow:\n      \"hover:shadow-lg hover:shadow-slate-200/50 transition-all duration-300\",\n    accentColor: \"text-indigo-600\",\n    accentColorLight: \"text-indigo-600/10\",\n    graphColor: \"text-indigo-600\",\n    graphBgColor: \"text-indigo-600/10\",\n    badgeBg: \"bg-indigo-50\",\n    badgeText: \"text-indigo-700\",\n    textMuted: \"text-slate-600\",\n    textNormal: \"text-slate-900\",\n  },\n  {\n    id: \"retro\",\n    name: \"Neo Brutalist\",\n    description: \"Bold contrasting theme with box shadows\",\n    cardBg: \"bg-amber-50\",\n    cardBorder: \"border-2 border-black\",\n    cardHoverShadow:\n      \"hover:shadow-[6px_6px_0px_0px_rgba(0,0,0,1)] transition-all duration-300\",\n    accentColor: \"text-rose-600\",\n    accentColorLight: \"text-rose-600/10\",\n    graphColor: \"text-rose-600\",\n    graphBgColor: \"text-rose-600/10\",\n    badgeBg: \"bg-white border border-black\",\n    badgeText: \"text-black font-bold\",\n    textMuted: \"text-slate-700\",\n    textNormal: \"text-black\",\n  },\n  {\n    id: \"midnight\",\n    name: \"Midnight\",\n    description: \"Deep dark theme with vibrant purples\",\n    cardBg: \"bg-gradient-to-br from-slate-950 to-slate-900\",\n    cardBorder: \"border border-purple-900/30\",\n    cardHoverShadow:\n      \"hover:shadow-lg hover:shadow-purple-500/20 transition-all duration-300\",\n    accentColor: \"text-purple-400\",\n    accentColorLight: \"text-purple-400/10\",\n    graphColor: \"text-purple-400\",\n    graphBgColor: \"text-purple-400/10\",\n    badgeBg: \"bg-purple-950/80 backdrop-blur-sm\",\n    badgeText: \"text-purple-300\",\n    textMuted: \"text-slate-400\",\n    textNormal: \"text-slate-200\",\n  },\n];\n\nexport type RepoData = {\n  name: string;\n  fullName: string;\n  description?: string;\n  owner: {\n    login: string;\n    avatarUrl: string;\n  };\n  stars: number;\n  forks: number;\n  watchers: number;\n  issues: number;\n  language?: string;\n  languageColor?: string;\n  updatedAt: string;\n  topics: string[];\n  activityData?: number[];\n  isPrivate: boolean;\n};\nconst CACHE_TTL = 15 * 60 * 1000;\n\ninterface GitHubRepoCardProps {\n  repoOwner?: string;\n  repoName?: string;\n  githubToken?: string;\n  manualMode?: boolean;\n  repoData?: RepoData;\n  themeId?: string;\n}\n\nconst getLanguageColor = (language: string) => {\n  return LANGUAGE_COLORS[language as keyof typeof LANGUAGE_COLORS] || \"#858585\";\n};\n\nconst formatRelativeTime = (dateString: string) => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n  const intervals = {\n    year: 31536000,\n    month: 2592000,\n    day: 86400,\n    hour: 3600,\n    minute: 60,\n    second: 1,\n  };\n  for (const [unit, seconds] of Object.entries(intervals)) {\n    const count = Math.floor(diffInSeconds / seconds);\n    if (count >= 1) {\n      return `${count} ${unit}${count !== 1 ? \"s\" : \"\"} ago`;\n    }\n  }\n  return \"just now\";\n};\n\nconst getCacheKey = (repoOwner: string, repoName: string) => {\n  return `github_repo_${repoOwner}_${repoName}`;\n};\n\nexport function GitHubRepoCard({\n  repoOwner,\n  repoName,\n  githubToken,\n  manualMode = false,\n  repoData,\n  themeId = \"modern-light\",\n}: GitHubRepoCardProps) {\n  const [copied, setCopied] = useState(false);\n  const [loading, setLoading] = useState(!manualMode);\n  const [error, setError] = useState<string | null>(null);\n  const [repo, setRepo] = useState<RepoData | null>(\n    manualMode ? repoData || null : null,\n  );\n  const [rateLimit, setRateLimit] = useState<{\n    remaining: number;\n    limit: number;\n  } | null>(null);\n\n  const currentTheme = useMemo(\n    () => themes.find((theme) => theme.id === themeId) || themes[0],\n    [themeId],\n  );\n\n  const repoUrl = useMemo(() => {\n    if (!repo) return \"\";\n    return `https://github.com/${repo.fullName}`;\n  }, [repo]);\n\n  const cloneCommand = useMemo(() => {\n    if (!repo) return \"\";\n    return `git clone https://github.com/${repo.fullName}.git`;\n  }, [repo]);\n\n  const getCachedData = useCallback(() => {\n    if (!repoOwner || !repoName || typeof window === \"undefined\") return null;\n\n    try {\n      const cacheKey = getCacheKey(repoOwner, repoName);\n      const cachedData = localStorage.getItem(cacheKey);\n\n      if (cachedData) {\n        const { data, timestamp } = JSON.parse(cachedData);\n\n        if (Date.now() - timestamp < CACHE_TTL) {\n          return data;\n        } else {\n          localStorage.removeItem(cacheKey);\n        }\n      }\n    } catch (err) {\n      console.error(\"Error reading from cache:\", err);\n    }\n\n    return null;\n  }, [repoOwner, repoName]);\n\n  const setCachedData = useCallback(\n    (data: RepoData) => {\n      if (!repoOwner || !repoName || typeof window === \"undefined\") return;\n\n      try {\n        const cacheKey = getCacheKey(repoOwner, repoName);\n        const cacheData = JSON.stringify({\n          data,\n          timestamp: Date.now(),\n        });\n\n        localStorage.setItem(cacheKey, cacheData);\n      } catch (err) {\n        console.error(\"Error writing to cache:\", err);\n      }\n    },\n    [repoOwner, repoName],\n  );\n\n  const fetchRepoData = useCallback(async () => {\n    if (!repoOwner || !repoName) return;\n\n    const cachedData = getCachedData();\n    if (cachedData) {\n      setRepo(cachedData);\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const headers: HeadersInit = {};\n      if (githubToken) {\n        headers.Authorization = `token ${githubToken}`;\n      }\n      const repoResponse = await fetch(\n        `https://api.github.com/repos/${repoOwner}/${repoName}`,\n        { headers },\n      );\n      const rateLimitRemaining = repoResponse.headers.get(\n        \"x-ratelimit-remaining\",\n      );\n      const rateLimitLimit = repoResponse.headers.get(\"x-ratelimit-limit\");\n\n      if (rateLimitRemaining && rateLimitLimit) {\n        setRateLimit({\n          remaining: parseInt(rateLimitRemaining, 10),\n          limit: parseInt(rateLimitLimit, 10),\n        });\n      }\n      if (!repoResponse.ok) {\n        if (repoResponse.status === 403 && rateLimitRemaining === \"0\") {\n          throw new Error(\n            \"GitHub API rate limit exceeded. Please provide a GitHub token.\",\n          );\n        } else {\n          throw new Error(\n            `Failed to fetch repository data: ${repoResponse.status}`,\n          );\n        }\n      }\n      const repoData = await repoResponse.json();\n      const commitsResponse = await fetch(\n        `https://api.github.com/repos/${repoOwner}/${repoName}/stats/commit_activity`,\n        { headers },\n      );\n      let activityData: number[] = [];\n      if (commitsResponse.ok) {\n        const commitsData = await commitsResponse.json();\n        const recentCommits = commitsData\n          .slice(-12)\n          .map((week: { total: number }) => week.total);\n        const maxCommit = Math.max(...recentCommits, 1);\n        activityData = recentCommits.map((count: number) => count / maxCommit);\n      }\n      const transformedRepo: RepoData = {\n        name: repoData.name,\n        fullName: repoData.full_name,\n        description: repoData.description || \"\",\n        owner: {\n          login: repoData.owner.login,\n          avatarUrl: repoData.owner.avatar_url,\n        },\n        stars: repoData.stargazers_count,\n        forks: repoData.forks_count,\n        watchers: repoData.watchers_count,\n        issues: repoData.open_issues_count,\n        language: repoData.language,\n        languageColor: repoData.language\n          ? getLanguageColor(repoData.language)\n          : undefined,\n        updatedAt: repoData.updated_at,\n        topics: repoData.topics || [],\n        activityData,\n        isPrivate: repoData.private,\n      };\n\n      setRepo(transformedRepo);\n      setCachedData(transformedRepo);\n      setLoading(false);\n    } catch (err) {\n      setError(\n        err instanceof Error ? err.message : \"An unknown error occurred\",\n      );\n      setLoading(false);\n    }\n  }, [repoOwner, repoName, githubToken, getCachedData, setCachedData]);\n\n  useEffect(() => {\n    if (manualMode && repoData) {\n      setRepo(repoData);\n      setLoading(false);\n      return;\n    }\n\n    if (!manualMode && repoOwner && repoName) {\n      fetchRepoData();\n    }\n  }, [manualMode, repoData, repoOwner, repoName, fetchRepoData]);\n\n  const copyToClipboard = () => {\n    if (repo) {\n      navigator.clipboard\n        .writeText(cloneCommand)\n        .then(() => {\n          setCopied(true);\n          setTimeout(() => setCopied(false), 2000);\n        })\n        .catch(console.error);\n    }\n  };\n\n  const renderLoadingState = () => (\n    <div\n      className={cn(\n        \"w-full max-w-full overflow-hidden transition-all duration-300 p-4 sm:p-6 rounded-md\",\n        currentTheme.cardBg,\n        currentTheme.cardBorder,\n        currentTheme.cardHoverShadow,\n      )}\n      aria-busy=\"true\"\n      aria-live=\"polite\"\n    >\n      <div className=\"pb-2\">\n        <div className=\"mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-4 w-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n            <div className=\"flex items-center\">\n              <div className=\"h-4 w-20 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n              <div className=\"mx-1 h-4 w-2 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n              <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n            </div>\n            <div className=\"ml-auto h-4 w-28 bg-gray-200 dark:bg-gray-700 rounded animate-pulse hidden sm:block\" />\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-2 mb-3\">\n          <div className=\"h-6 w-6 bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\" />\n          <div className=\"h-5 w-32 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          <div className=\"ml-auto h-6 w-16 bg-gray-200 dark:bg-gray-700 rounded-lg animate-pulse\" />\n        </div>\n\n        <div className=\"space-y-2 mb-4\">\n          <div className=\"h-4 w-full bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          <div className=\"h-4 w-3/4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        </div>\n      </div>\n      <div className=\"pb-2\">\n        <div className=\"mb-4 sm:mb-6 rounded-md border border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"mb-1 sm:mb-2 flex items-center justify-between p-1.5 sm:p-2\">\n            <div className=\"h-4 w-16 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n            <div className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          </div>\n          <div className=\"h-[40px] sm:h-[60px] w-full rounded-b-lg bg-gray-100 dark:bg-gray-800 p-1 sm:p-2 animate-pulse\">\n            <div className=\"h-full w-full bg-gray-200 dark:bg-gray-700 rounded opacity-30 animate-pulse\" />\n          </div>\n        </div>\n        <div className=\"grid grid-cols-2 xs:grid-cols-4 gap-1 sm:gap-2\">\n          {[0, 1, 2, 3].map((index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div className=\"h-4 w-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n              <div className=\"h-4 w-10 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n            </div>\n          ))}\n        </div>\n        <div className=\"mt-3 sm:mt-4\">\n          <div className=\"mb-1.5 sm:mb-2 flex items-center gap-2\">\n            <div className=\"flex items-center gap-1.5\">\n              <div className=\"h-3 w-3 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\" />\n              <div className=\"h-4 w-16 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n            </div>\n          </div>\n\n          <div className=\"flex flex-col xs:flex-row items-start xs:items-center justify-between gap-2\">\n            <div className=\"flex flex-wrap gap-1.5\">\n              {[0, 1, 2].map((index) => (\n                <div\n                  key={index}\n                  className=\"h-6 w-16 bg-gray-200 dark:bg-gray-700 rounded-md animate-pulse\"\n                />\n              ))}\n            </div>\n            <div className=\"w-full xs:w-auto flex justify-end\">\n              <div className=\"h-6 w-16 bg-gray-200 dark:bg-gray-700 rounded-md animate-pulse\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  const renderErrorState = () => (\n    <div\n      className={cn(\n        \"w-full max-w-full overflow-hidden transition-all duration-300 p-4 sm:p-6 rounded-md\",\n        currentTheme.cardBg,\n        currentTheme.cardBorder,\n        currentTheme.cardHoverShadow,\n      )}\n      aria-live=\"assertive\"\n    >\n      <div className=\"flex flex-col items-center justify-center py-6 sm:py-8\">\n        <div\n          className={cn(\n            \"flex items-center justify-center w-16 h-16 mb-4 rounded-full\",\n            currentTheme.badgeBg,\n          )}\n        >\n          <AlertCircle\n            className={cn(\"h-8 w-8\", currentTheme.accentColor)}\n            aria-hidden=\"true\"\n          />\n        </div>\n\n        <h3\n          className={cn(\n            \"text-lg font-semibold mb-2 text-center\",\n            currentTheme.textNormal,\n          )}\n        >\n          Repository Not Found\n        </h3>\n\n        <p\n          className={cn(\n            \"text-sm text-center max-w-xs mb-4\",\n            currentTheme.textMuted,\n          )}\n        >\n          {error?.includes(\"404\")\n            ? \"This repository doesn't exist or you might not have access to it.\"\n            : error?.includes(\"rate limit\")\n              ? \"GitHub API rate limit exceeded. Please try again later or use a GitHub token.\"\n              : error}\n        </p>\n\n        <div className=\"flex flex-wrap gap-3 justify-center\">\n          {error?.includes(\"rate limit\") && (\n            <button\n              onClick={() => {\n                if (typeof window !== \"undefined\") {\n                  try {\n                    const cacheKey = getCacheKey(\n                      repoOwner || \"\",\n                      repoName || \"\",\n                    );\n                    localStorage.removeItem(cacheKey);\n                  } catch (e) {\n                    console.error(\"Error clearing cache:\", e);\n                  }\n                }\n                fetchRepoData();\n              }}\n              className={cn(\n                \"flex items-center gap-1.5 px-3 py-1.5 text-sm font-medium rounded-md\",\n                currentTheme.badgeBg,\n                currentTheme.badgeText,\n                \"hover:opacity-90 transition-all duration-200\",\n              )}\n            >\n              <svg\n                className=\"h-4 w-4\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                />\n              </svg>\n              Try Again\n            </button>\n          )}\n\n          <Link\n            href={`https://github.com/${repoOwner || \"\"}/${repoName || \"\"}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={cn(\n              \"flex items-center gap-1.5 px-3 py-1.5 text-sm font-medium rounded-md\",\n              currentTheme.badgeBg,\n              currentTheme.badgeText,\n              \"hover:opacity-90 transition-all duration-200\",\n            )}\n          >\n            <Github className=\"h-4 w-4\" aria-hidden=\"true\" />\n            Visit GitHub\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (loading) return renderLoadingState();\n  if (error) return renderErrorState();\n  if (!repo) return null;\n\n  return (\n    <div\n      className={cn(\n        \"w-full max-w-full overflow-hidden transition-all duration-300 p-4 sm:p-6 rounded-md\",\n        currentTheme.cardBg,\n        currentTheme.cardBorder,\n        currentTheme.cardHoverShadow,\n      )}\n      role=\"article\"\n      aria-label={`GitHub repository: ${repo?.name}`}\n    >\n      <div className=\"pb-2\">\n        <div>\n          <div className=\"mb-2\">\n            <div className=\"flex flex-wrap items-center gap-1 sm:gap-2\">\n              <Github\n                className={cn(\n                  \"h-3 w-3 sm:h-4 sm:w-4\",\n                  currentTheme.accentColor,\n                )}\n                aria-hidden=\"true\"\n              />\n              <div className=\"flex items-center text-xs sm:text-sm\">\n                <Link\n                  href={`https://github.com/${repo.owner.login}`}\n                  className={cn(\n                    \"hover:underline font-medium\",\n                    currentTheme.textMuted,\n                  )}\n                  aria-label={`View ${repo.owner.login}'s GitHub profile`}\n                >\n                  {repo.owner.login}\n                </Link>\n                <span\n                  className={cn(\"mx-1\", currentTheme.textMuted)}\n                  aria-hidden=\"true\"\n                >\n                  /\n                </span>\n                <Link\n                  href={repoUrl}\n                  className={cn(\n                    \"font-medium hover:underline\",\n                    currentTheme.accentColor,\n                  )}\n                  aria-label={`View ${repo.name} repository on GitHub`}\n                >\n                  {repo.name}\n                </Link>\n              </div>\n              {rateLimit && (\n                <div\n                  className={cn(\n                    \"ml-auto text-xs font-medium hidden sm:flex items-center\",\n                    currentTheme.textMuted,\n                  )}\n                  aria-label={`GitHub API rate limit: ${rateLimit.remaining} of ${rateLimit.limit} requests remaining`}\n                >\n                  <span>\n                    {rateLimit.remaining}/{rateLimit.limit}\n                  </span>\n                  <span className=\"ml-1 text-xs\">API requests</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <div className=\"relative inline-flex h-5 w-5 sm:h-6 sm:w-6 items-center justify-center overflow-hidden rounded-full\">\n            {repo.owner.avatarUrl ? (\n              <Image\n                src={repo.owner.avatarUrl}\n                alt={`${repo.owner.login}'s avatar`}\n                className=\"h-full w-full object-cover\"\n                width={24}\n                height={24}\n                loading=\"lazy\"\n              />\n            ) : (\n              <div className=\"flex h-full w-full items-center justify-center bg-gray-200 text-xs font-medium\">\n                {repo.owner.login.substring(0, 2).toUpperCase()}\n              </div>\n            )}\n          </div>\n          <h1\n            className={cn(\n              \"text-sm sm:text-lg font-semibold truncate max-w-[150px] sm:max-w-full\",\n              currentTheme.textNormal,\n            )}\n          >\n            {repo.name}\n          </h1>\n          <h1\n            className={cn(\n              \"ml-auto text-[10px] sm:text-xs font-medium px-1.5 sm:px-2 py-0.5 sm:py-1 rounded-lg border\",\n              currentTheme.badgeBg,\n              currentTheme.badgeText,\n            )}\n          >\n            {repo.isPrivate ? \"Private\" : \"Public\"}\n          </h1>\n        </div>\n        <div\n          className={cn(\n            \"line-clamp-2 text-xs sm:text-sm font-normal leading-snug tracking-wide my-2 sm:my-3\",\n            currentTheme.textMuted,\n          )}\n        >\n          {repo.description || \"No description provided\"}\n        </div>\n      </div>\n      <div className=\"pb-2\">\n        <div\n          className=\"mb-4 sm:mb-6 rounded-md border border-border shadow-sm\"\n          aria-label=\"Repository activity graph\"\n        >\n          <div className=\"mb-1 sm:mb-2 flex items-center justify-between text-xs p-1.5 sm:p-2\">\n            <span\n              className={cn(\n                \"flex items-center gap-0.5 sm:gap-1 font-semibold text-[10px] sm:text-xs\",\n                currentTheme.textMuted,\n              )}\n            >\n              <History className=\"h-3 w-3 sm:h-4 sm:w-4\" aria-hidden=\"true\" />\n              Activity\n            </span>\n            <span\n              className={cn(\n                \"text-[10px] sm:text-xs font-medium\",\n                currentTheme.textMuted,\n              )}\n            >\n              Updated {formatRelativeTime(repo.updatedAt)}\n            </span>\n          </div>\n          <div\n            className=\"h-[40px] sm:h-[60px] w-full overflow-hidden rounded-b-lg bg-muted/50 dark:bg-gray-800/50 p-1 sm:p-2\"\n            role=\"img\"\n            aria-label=\"Repository commit activity visualization\"\n          >\n            {repo.activityData && repo.activityData.length > 0 ? (\n              <svg\n                className=\"h-full w-full\"\n                viewBox=\"0 0 100 20\"\n                preserveAspectRatio=\"none\"\n                aria-hidden=\"true\"\n              >\n                <line\n                  x1=\"0\"\n                  y1=\"5\"\n                  x2=\"100\"\n                  y2=\"5\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"0.2\"\n                  strokeDasharray=\"1\"\n                  className=\"text-muted/30\"\n                />\n                <line\n                  x1=\"0\"\n                  y1=\"10\"\n                  x2=\"100\"\n                  y2=\"10\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"0.2\"\n                  strokeDasharray=\"1\"\n                  className=\"text-muted/30\"\n                />\n                <line\n                  x1=\"0\"\n                  y1=\"15\"\n                  x2=\"100\"\n                  y2=\"15\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"0.2\"\n                  strokeDasharray=\"1\"\n                  className=\"text-muted/30\"\n                />\n                {repo.activityData.map((value, index) => (\n                  <circle\n                    key={index}\n                    cx={`${index * (100 / (repo.activityData?.length || 1))}`}\n                    cy={`${20 - value * 20}`}\n                    r=\"0.8\"\n                    className={currentTheme.graphColor}\n                  />\n                ))}\n                <polyline\n                  points={repo.activityData\n                    .map(\n                      (value, index) =>\n                        `${index * (100 / (repo.activityData?.length || 1))},${20 - value * 20}`,\n                    )\n                    .join(\" \")}\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"1.5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className={currentTheme.graphColor}\n                />\n                <path\n                  d={`M0,20 ${repo.activityData\n                    .map(\n                      (value, index) =>\n                        `L${index * (100 / (repo.activityData?.length || 1))},${20 - value * 20}`,\n                    )\n                    .join(\" \")} L100,20 Z`}\n                  fill=\"currentColor\"\n                  className={currentTheme.graphBgColor}\n                />\n              </svg>\n            ) : (\n              <div\n                className={cn(\n                  \"flex h-full items-center justify-center rounded-md bg-background/50 text-xs font-medium\",\n                  currentTheme.textMuted,\n                )}\n                aria-label=\"No activity data available\"\n              >\n                No activity data available\n              </div>\n            )}\n          </div>\n        </div>\n        <div\n          className=\"grid grid-cols-2 xs:grid-cols-4 gap-1 sm:gap-2 text-xs sm:text-sm\"\n          role=\"group\"\n          aria-label=\"Repository statistics\"\n        >\n          <div>\n            <div\n              className={cn(\n                \"flex items-center gap-0.5 sm:gap-1 font-normal\",\n                currentTheme.textMuted,\n              )}\n              aria-label={`${repo.stars.toLocaleString()} stars`}\n            >\n              <Star className=\"h-3 w-3 sm:h-4 sm:w-4\" aria-hidden=\"true\" />\n              <span>{repo.stars.toLocaleString()}</span>\n            </div>\n          </div>\n          <div>\n            <div\n              className={cn(\n                \"flex items-center gap-0.5 sm:gap-1 font-normal\",\n                currentTheme.textMuted,\n              )}\n              aria-label={`${repo.forks.toLocaleString()} forks`}\n            >\n              <GitFork className=\"h-3 w-3 sm:h-4 sm:w-4\" aria-hidden=\"true\" />\n              <span>{repo.forks.toLocaleString()}</span>\n            </div>\n          </div>\n          <div>\n            <div\n              className={cn(\n                \"flex items-center gap-0.5 sm:gap-1 font-normal\",\n                currentTheme.textMuted,\n              )}\n              aria-label={`${repo.watchers.toLocaleString()} watchers`}\n            >\n              <Eye className=\"h-3 w-3 sm:h-4 sm:w-4\" aria-hidden=\"true\" />\n              <span>{repo.watchers.toLocaleString()}</span>\n            </div>\n          </div>\n          <div>\n            <div\n              className={cn(\n                \"flex items-center gap-0.5 sm:gap-1 font-normal\",\n                currentTheme.textMuted,\n              )}\n              aria-label={`${repo.issues.toLocaleString()} issues`}\n            >\n              <BookOpen className=\"h-3 w-3 sm:h-4 sm:w-4\" aria-hidden=\"true\" />\n              <span>{repo.issues.toLocaleString()}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-3 sm:mt-4\">\n          {repo.language && (\n            <div\n              className=\"mb-1.5 sm:mb-2 flex items-center gap-2\"\n              aria-label={`Primary language: ${repo.language}`}\n            >\n              <div className=\"flex items-center gap-1 sm:gap-1.5\">\n                <div\n                  className=\"h-2 w-2 sm:h-3 sm:w-3 rounded-full\"\n                  style={{ backgroundColor: repo.languageColor }}\n                  aria-hidden=\"true\"\n                />\n                <span\n                  className={cn(\n                    \"text-xs sm:text-sm font-medium\",\n                    currentTheme.textNormal,\n                  )}\n                >\n                  {repo.language}\n                </span>\n              </div>\n            </div>\n          )}\n          <div className=\"flex flex-col xs:flex-row items-start xs:items-center justify-between gap-2\">\n            <div className=\"w-full xs:w-auto\">\n              {repo.topics && repo.topics.length > 0 && (\n                <div\n                  className=\"flex flex-wrap gap-1 sm:gap-1.5\"\n                  role=\"group\"\n                  aria-label=\"Repository topics\"\n                >\n                  {repo.topics.slice(0, 2).map((topic) => (\n                    <h1\n                      key={topic}\n                      className={cn(\n                        \"text-[10px] sm:text-xs font-medium px-1.5 sm:px-2 py-0.5 sm:py-1 rounded-md border leading-snug tracking-wide\",\n                        currentTheme.badgeBg,\n                        currentTheme.badgeText,\n                      )}\n                    >\n                      {topic}\n                    </h1>\n                  ))}\n                  {repo.topics.length > 2 && (\n                    <h1\n                      className={cn(\n                        \"text-[10px] sm:text-xs font-medium px-1.5 sm:px-2 py-0.5 sm:py-1 rounded-md border leading-snug tracking-wide\",\n                        currentTheme.badgeBg,\n                        currentTheme.badgeText,\n                      )}\n                    >\n                      +{repo.topics.length - 2} more\n                    </h1>\n                  )}\n                </div>\n              )}\n            </div>\n            <div className=\"w-full xs:w-auto flex justify-end\">\n              <button\n                className={`flex items-center gap-1 border border-${currentTheme.accentColor.split(\" \")[0]} text-[15px] sm:text-xs font-medium px-1.5 sm:px-2 py-0.5 sm:py-1 rounded-md transition-colors duration-200 ${currentTheme.accentColor} hover:bg-slate-100/20 dark:hover:bg-slate-800/20 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-500 ${currentTheme.textNormal}`}\n                onClick={copyToClipboard}\n                type=\"button\"\n                aria-label={\n                  copied\n                    ? \"Clone command copied to clipboard\"\n                    : \"Copy clone command to clipboard\"\n                }\n              >\n                {copied ? (\n                  <>\n                    <Check\n                      className=\"h-3 w-3 sm:h-3.5 sm:w-3.5\"\n                      aria-hidden=\"true\"\n                    />\n                    <span>Copied</span>\n                  </>\n                ) : (\n                  <>\n                    <Code\n                      className=\"h-3 w-3 sm:h-3.5 sm:w-3.5\"\n                      aria-hidden=\"true\"\n                    />\n                    <span>Clone</span>\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "src\\lib\\utils.ts",
      "content": "import clsx, { ClassValue } from \"clsx\";\nimport { Metadata } from \"next\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function humanize(name: string): string {\n  return name\n    .replace(/-/g, \" \")\n    .replace(/([A-Z])/g, \" $1\")\n    .trim()\n    .split(/\\s+/)\n    .map((word) => word[0].toUpperCase() + word.substring(1).toLowerCase())\n    .join(\" \");\n}\n\nexport const truncate = (str: string | null, length: number) => {\n  if (!str || str.length <= length) return str;\n  return `${str.slice(0, length - 3)}...`;\n};\n\nexport const fetcher = (...args: Parameters<typeof fetch>) =>\n  fetch(...args).then((res) => res.json());\n\nexport const capitalize = (str: string, lower = false) =>\n  (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, (match) =>\n    match.toUpperCase(),\n  );\n\nexport function formatDate(input: string | number): string {\n  const date = new Date(input);\n  return date.toLocaleDateString(\"en-US\", {\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n}\n\nexport function absoluteUrl(path: string) {\n  return `${process.env.NEXT_PUBLIC_APP_URL || \"https://nuvyxui.vercel.app\"}${path}`;\n}\n\nexport function constructMetadata({\n  title = \"Nuvyx UI - Modern React + Tailwind CSS + Motion components & Templates\",\n  description = \"Nuvyx UI is a curated collection of the best landing page components built using React + Tailwind CSS + Motion\",\n  image = absoluteUrl(\"/og\"),\n  ...props\n}: {\n  title?: string;\n  description?: string;\n  image?: string;\n  [key: string]: Metadata[keyof Metadata];\n}): Metadata {\n  return {\n    title,\n    description,\n    keywords: [\n      \"React\",\n      \"Tailwind CSS\",\n      \"Motion\",\n      \"Landing Page\",\n      \"Components\",\n      \"Next.js\",\n    ],\n    openGraph: {\n      title,\n      description,\n      type: \"website\",\n      images: [\n        {\n          url: image,\n          width: 1200,\n          height: 630,\n        },\n      ],\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title,\n      description,\n      images: [image],\n      creator: \"@mihirjaiswal\",\n    },\n    icons: \"/favicon.ico\",\n    metadataBase: new URL(\"https://nuvyxui.vercel.app/\"),\n    authors: [\n      {\n        name: \"Mihir Jaiswal\",\n        url: \"https://github.com/MihirJaiswal\",\n      },\n    ],\n    creator: \"mihirjaiswal\",\n    ...props,\n  };\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}