{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "lamp-heading",
  "type": "registry:ui",
  "title": "Lamp Heading",
  "description": "A heading component with a lamp effect.",
  "dependencies": [
    "framer-motion",
    ".."
  ],
  "files": [
    {
      "path": "registry/ui/lamp-heading.tsx",
      "content": "\"use client\";\nimport { useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"../../lib/utils\";\n\ninterface LampHeadingProps {\n  text: string;\n  className?: string;\n  gradientColors?: {\n    from: string;\n    to: string;\n  };\n  lineHeight?: number;\n  glowIntensity?: number;\n  glowSize?: number;\n  animationSpeed?: number;\n  direction?: \"above\" | \"below\";\n}\n\nexport const LampHeading = ({\n  text,\n  className,\n  gradientColors = { from: \"#ff3366\", to: \"#338ef7\" },\n  lineHeight = 2,\n  glowIntensity = 0.7,\n  glowSize = 20,\n  animationSpeed = 3,\n  direction = \"below\",\n}: LampHeadingProps) => {\n  const mainLineRef = useRef<HTMLDivElement>(null);\n  const flowAnimation = {\n    animate: {\n      backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n      transition: {\n        duration: animationSpeed,\n        ease: \"easeInOut\",\n        repeat: Infinity,\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (mainLineRef.current) {\n      mainLineRef.current.style.backgroundSize = \"200% 200%\";\n    }\n  }, []);\n  const getGlowStyles = (size: number, intensity: number, index: number) => {\n    const baseStyles = {\n      position: \"absolute\" as const,\n      width: \"100%\",\n      height: `${size}px`,\n      background: `linear-gradient(to right, ${gradientColors.from}, ${gradientColors.to}, ${gradientColors.from})`,\n      filter: `blur(${glowSize / (index + 1)}px)`,\n      opacity: intensity,\n      left: 0,\n      backgroundSize: \"200% 200%\",\n    };\n    if (direction === \"below\") {\n      return {\n        ...baseStyles,\n        top: `${lineHeight + 1}px`,\n        transformOrigin: \"center top\",\n      };\n    } else {\n      return {\n        ...baseStyles,\n        bottom: `${lineHeight + 1}px`,\n        transformOrigin: \"center bottom\",\n      };\n    }\n  };\n\n  return (\n    <div className={cn(\"flex flex-col items-start\", className)}>\n      <h2 className=\"font-medium tracking-wide\">{text}</h2>\n      <div className=\"w-full relative mt-1\">\n        <motion.div\n          variants={flowAnimation}\n          animate=\"animate\"\n          style={getGlowStyles(\n            Math.max(8, lineHeight * 3),\n            glowIntensity * 0.7,\n            1,\n          )}\n          className=\"rounded-full\"\n        />\n\n        <motion.div\n          variants={flowAnimation}\n          animate=\"animate\"\n          style={getGlowStyles(Math.max(4, lineHeight * 2), glowIntensity, 2)}\n          className=\"rounded-full\"\n          transition={{\n            duration: animationSpeed * 0.8,\n          }}\n        />\n\n        <motion.div\n          ref={mainLineRef}\n          variants={flowAnimation}\n          animate=\"animate\"\n          style={{\n            height: `${lineHeight}px`,\n            background: `linear-gradient(to right, ${gradientColors.from}, ${gradientColors.to}, ${gradientColors.from})`,\n            position: \"relative\",\n            zIndex: 10,\n            backgroundSize: \"200% 200%\",\n          }}\n          className=\"w-full rounded-full\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LampHeading;\n",
      "type": "registry:ui",
      "target": "components/ui/lamp-heading.tsx"
    }
  ]
}