{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cyberpunk-card",
  "type": "registry:ui",
  "title": "Cyberpunk Card",
  "description": "A card component with a cyberpunk aesthetic. Features neon colors and a futuristic design.",
  "dependencies": [
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "path": "src/nuvyxui/components/cyberpunk-card.tsx",
      "content": "\"use client\";\nimport type React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface CyberpunkCardProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  theme?:\n    | \"neon-blue\"\n    | \"neon-pink\"\n    | \"neon-green\"\n    | \"neon-orange\"\n    | \"neon-purple\"\n    | \"custom\";\n  customColors?: {\n    primary: string;\n    secondary: string;\n    accent: string;\n  };\n  borderStyle?: \"solid\" | \"dashed\" | \"glitch\" | \"corners\";\n  colorShift?: boolean;\n  lightTrail?: boolean;\n  rounded?: \"none\" | \"sm\" | \"md\" | \"lg\";\n  glow?: boolean;\n  glowIntensity?: 1 | 2 | 3 | 4 | 5;\n  children: React.ReactNode;\n}\n\nexport const CyberpunkCard = ({\n  theme = \"neon-blue\",\n  customColors,\n  borderStyle = \"solid\",\n  colorShift = true,\n  lightTrail = true,\n  rounded = \"md\",\n  glow = true,\n  glowIntensity = 3,\n  className,\n  children,\n  ...props\n}: CyberpunkCardProps) => {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [isHovered, setIsHovered] = useState(false);\n  const [colorPhase, setColorPhase] = useState(0);\n\n  useEffect(() => {\n    if (!colorShift || !isHovered) return;\n\n    const interval = setInterval(() => {\n      setColorPhase((prev) => (prev + 1) % 100);\n    }, 50);\n\n    return () => clearInterval(interval);\n  }, [colorShift, isHovered]);\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!lightTrail) return;\n\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMousePosition({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n    });\n  };\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  const themeColors = {\n    \"neon-blue\": {\n      primary: \"from-blue-500 to-cyan-400 dark:from-blue-600 to-cyan-500\",\n      secondary: \"from-blue-600 to-cyan-500 dark:from-blue-700 to-cyan-600\",\n      accent: \"bg-blue-400 dark:bg-blue-500\",\n      text: \"text-blue-50 dark:text-blue-100\",\n      glow: \"shadow-blue-500/50 dark:shadow-blue-600/50\",\n    },\n    \"neon-pink\": {\n      primary: \"from-pink-500 to-purple-400 dark:from-pink-600 to-purple-500\",\n      secondary: \"from-pink-600 to-purple-500 dark:from-pink-700 to-purple-600\",\n      accent: \"bg-pink-400 dark:bg-pink-500\",\n      text: \"text-pink-50 dark:text-pink-100\",\n      glow: \"shadow-pink-500/50 dark:shadow-pink-600/50\",\n    },\n    \"neon-green\": {\n      primary:\n        \"from-green-500 to-emerald-400 dark:from-green-600 to-emerald-500\",\n      secondary:\n        \"from-green-600 to-emerald-500 dark:from-green-700 to-emerald-600\",\n      accent: \"bg-green-400 dark:bg-green-500\",\n      text: \"text-green-50 dark:text-green-100\",\n      glow: \"shadow-green-500/50 dark:shadow-green-600/50\",\n    },\n    \"neon-orange\": {\n      primary: \"from-orange-500 to-amber-400 dark:from-orange-600 to-amber-500\",\n      secondary:\n        \"from-orange-600 to-amber-500 dark:from-orange-700 to-amber-600\",\n      accent: \"bg-orange-400 dark:bg-orange-500\",\n      text: \"text-orange-50 dark:text-orange-100\",\n      glow: \"shadow-orange-500/50 dark:shadow-orange-600/50\",\n    },\n    \"neon-purple\": {\n      primary: \"from-purple-600 to-blue-500 dark:from-purple-700 to-blue-600\",\n      secondary: \"from-purple-700 to-blue-500 dark:from-purple-700 to-blue-600\",\n      accent: \"bg-purple-400 dark:bg-purple-500\",\n      text: \"text-purple-50 dark:text-purple-100\",\n      glow: \"shadow-purple-500/50 dark:shadow-purple-600/50\",\n    },\n    custom: {\n      primary: customColors\n        ? `from-[${customColors.primary}] to-[${customColors.secondary}]`\n        : \"from-blue-500 to-cyan-400\",\n      secondary: customColors\n        ? `from-[${customColors.secondary}] to-[${customColors.primary}]`\n        : \"from-blue-600 to-cyan-500\",\n      accent: customColors ? `bg-[${customColors.accent}]` : \"bg-blue-400\",\n      text: \"text-gray-50\",\n      glow: customColors\n        ? `shadow-[${customColors.primary}]/50`\n        : \"shadow-blue-500/50\",\n      dark: {\n        primary: customColors\n          ? `from-[${customColors.primary}] to-[${customColors.secondary}]`\n          : \"from-blue-600 to-cyan-500\",\n        secondary: customColors\n          ? `from-[${customColors.secondary}] to-[${customColors.primary}]`\n          : \"from-blue-700 to-cyan-600\",\n        accent: customColors ? `bg-[${customColors.accent}]` : \"bg-blue-500\",\n        text: \"text-gray-100\",\n        glow: customColors\n          ? `shadow-[${customColors.primary}]/50`\n          : \"shadow-blue-600/50\",\n      },\n    },\n  };\n\n  const currentTheme = themeColors[theme];\n\n  const borderStyles = {\n    solid: \"border-2\",\n    dashed: \"border-2 border-dashed\",\n    glitch:\n      \"before:content-[''] before:absolute before:inset-0 before:border-2 before:translate-x-1 before:translate-y-1 before:border-white/30 before:z-[-1]\",\n    corners:\n      \"border-0 before:content-[''] before:absolute before:w-8 before:h-8 before:border-t-2 before:border-l-2 before:top-0 before:left-0 after:content-[''] after:absolute after:w-8 after:h-8 after:border-b-2 after:border-r-2 after:bottom-0 after:right-0\",\n  };\n\n  const roundedStyles = {\n    none: \"rounded-none\",\n    sm: \"rounded-sm\",\n    md: \"rounded-md\",\n    lg: \"rounded-lg\",\n  };\n\n  const glowIntensityStyles = {\n    1: \"shadow-md\",\n    2: \"shadow-lg\",\n    3: \"shadow-xl\",\n    4: \"shadow-2xl\",\n    5: \"shadow-2xl shadow-lg\",\n  };\n\n  return (\n    <div\n      className={cn(\n        \"relative p-6 border transition-all duration-300 overflow-hidden\",\n        `bg-gradient-to-r ${currentTheme.primary}`,\n        borderStyles[borderStyle],\n        roundedStyles[rounded],\n        glow && glowIntensityStyles[glowIntensity],\n        glow && currentTheme.glow,\n        currentTheme.text,\n        className,\n      )}\n      style={{\n        borderColor:\n          colorShift && isHovered\n            ? `hsl(${(colorPhase * 3.6) % 360}, 100%, 70%)`\n            : undefined,\n      }}\n      onMouseMove={handleMouseMove}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      {...props}\n    >\n      {lightTrail && isHovered && (\n        <div\n          className=\"absolute w-24 h-24 rounded-full bg-white/20 blur-xl pointer-events-none transition-opacity duration-700\"\n          style={{\n            left: mousePosition.x - 48,\n            top: mousePosition.y - 48,\n            opacity: 0.5,\n          }}\n        />\n      )}\n      <div className=\"relative z-10\">{children}</div>\n      <div\n        className={cn(\n          \"absolute -bottom-2 -right-2 w-16 h-16 transform rotate-45 opacity-70\",\n          currentTheme.accent,\n        )}\n      />\n    </div>\n  );\n};\n",
      "type": "registry:ui",
      "target": "components/ui/cyberpunk-card.tsx"
    },
    {
      "path": "src\\nuvyxui\\components\\cyberpunk-card.tsx",
      "content": "\"use client\";\nimport type React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface CyberpunkCardProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  theme?:\n    | \"neon-blue\"\n    | \"neon-pink\"\n    | \"neon-green\"\n    | \"neon-orange\"\n    | \"neon-purple\"\n    | \"custom\";\n  customColors?: {\n    primary: string;\n    secondary: string;\n    accent: string;\n  };\n  borderStyle?: \"solid\" | \"dashed\" | \"glitch\" | \"corners\";\n  colorShift?: boolean;\n  lightTrail?: boolean;\n  rounded?: \"none\" | \"sm\" | \"md\" | \"lg\";\n  glow?: boolean;\n  glowIntensity?: 1 | 2 | 3 | 4 | 5;\n  children: React.ReactNode;\n}\n\nexport const CyberpunkCard = ({\n  theme = \"neon-blue\",\n  customColors,\n  borderStyle = \"solid\",\n  colorShift = true,\n  lightTrail = true,\n  rounded = \"md\",\n  glow = true,\n  glowIntensity = 3,\n  className,\n  children,\n  ...props\n}: CyberpunkCardProps) => {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [isHovered, setIsHovered] = useState(false);\n  const [colorPhase, setColorPhase] = useState(0);\n\n  useEffect(() => {\n    if (!colorShift || !isHovered) return;\n\n    const interval = setInterval(() => {\n      setColorPhase((prev) => (prev + 1) % 100);\n    }, 50);\n\n    return () => clearInterval(interval);\n  }, [colorShift, isHovered]);\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!lightTrail) return;\n\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMousePosition({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n    });\n  };\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  const themeColors = {\n    \"neon-blue\": {\n      primary: \"from-blue-500 to-cyan-400 dark:from-blue-600 to-cyan-500\",\n      secondary: \"from-blue-600 to-cyan-500 dark:from-blue-700 to-cyan-600\",\n      accent: \"bg-blue-400 dark:bg-blue-500\",\n      text: \"text-blue-50 dark:text-blue-100\",\n      glow: \"shadow-blue-500/50 dark:shadow-blue-600/50\",\n    },\n    \"neon-pink\": {\n      primary: \"from-pink-500 to-purple-400 dark:from-pink-600 to-purple-500\",\n      secondary: \"from-pink-600 to-purple-500 dark:from-pink-700 to-purple-600\",\n      accent: \"bg-pink-400 dark:bg-pink-500\",\n      text: \"text-pink-50 dark:text-pink-100\",\n      glow: \"shadow-pink-500/50 dark:shadow-pink-600/50\",\n    },\n    \"neon-green\": {\n      primary:\n        \"from-green-500 to-emerald-400 dark:from-green-600 to-emerald-500\",\n      secondary:\n        \"from-green-600 to-emerald-500 dark:from-green-700 to-emerald-600\",\n      accent: \"bg-green-400 dark:bg-green-500\",\n      text: \"text-green-50 dark:text-green-100\",\n      glow: \"shadow-green-500/50 dark:shadow-green-600/50\",\n    },\n    \"neon-orange\": {\n      primary: \"from-orange-500 to-amber-400 dark:from-orange-600 to-amber-500\",\n      secondary:\n        \"from-orange-600 to-amber-500 dark:from-orange-700 to-amber-600\",\n      accent: \"bg-orange-400 dark:bg-orange-500\",\n      text: \"text-orange-50 dark:text-orange-100\",\n      glow: \"shadow-orange-500/50 dark:shadow-orange-600/50\",\n    },\n    \"neon-purple\": {\n      primary: \"from-purple-600 to-blue-500 dark:from-purple-700 to-blue-600\",\n      secondary: \"from-purple-700 to-blue-500 dark:from-purple-700 to-blue-600\",\n      accent: \"bg-purple-400 dark:bg-purple-500\",\n      text: \"text-purple-50 dark:text-purple-100\",\n      glow: \"shadow-purple-500/50 dark:shadow-purple-600/50\",\n    },\n    custom: {\n      primary: customColors\n        ? `from-[${customColors.primary}] to-[${customColors.secondary}]`\n        : \"from-blue-500 to-cyan-400\",\n      secondary: customColors\n        ? `from-[${customColors.secondary}] to-[${customColors.primary}]`\n        : \"from-blue-600 to-cyan-500\",\n      accent: customColors ? `bg-[${customColors.accent}]` : \"bg-blue-400\",\n      text: \"text-gray-50\",\n      glow: customColors\n        ? `shadow-[${customColors.primary}]/50`\n        : \"shadow-blue-500/50\",\n      dark: {\n        primary: customColors\n          ? `from-[${customColors.primary}] to-[${customColors.secondary}]`\n          : \"from-blue-600 to-cyan-500\",\n        secondary: customColors\n          ? `from-[${customColors.secondary}] to-[${customColors.primary}]`\n          : \"from-blue-700 to-cyan-600\",\n        accent: customColors ? `bg-[${customColors.accent}]` : \"bg-blue-500\",\n        text: \"text-gray-100\",\n        glow: customColors\n          ? `shadow-[${customColors.primary}]/50`\n          : \"shadow-blue-600/50\",\n      },\n    },\n  };\n\n  const currentTheme = themeColors[theme];\n\n  const borderStyles = {\n    solid: \"border-2\",\n    dashed: \"border-2 border-dashed\",\n    glitch:\n      \"before:content-[''] before:absolute before:inset-0 before:border-2 before:translate-x-1 before:translate-y-1 before:border-white/30 before:z-[-1]\",\n    corners:\n      \"border-0 before:content-[''] before:absolute before:w-8 before:h-8 before:border-t-2 before:border-l-2 before:top-0 before:left-0 after:content-[''] after:absolute after:w-8 after:h-8 after:border-b-2 after:border-r-2 after:bottom-0 after:right-0\",\n  };\n\n  const roundedStyles = {\n    none: \"rounded-none\",\n    sm: \"rounded-sm\",\n    md: \"rounded-md\",\n    lg: \"rounded-lg\",\n  };\n\n  const glowIntensityStyles = {\n    1: \"shadow-md\",\n    2: \"shadow-lg\",\n    3: \"shadow-xl\",\n    4: \"shadow-2xl\",\n    5: \"shadow-2xl shadow-lg\",\n  };\n\n  return (\n    <div\n      className={cn(\n        \"relative p-6 border transition-all duration-300 overflow-hidden\",\n        `bg-gradient-to-r ${currentTheme.primary}`,\n        borderStyles[borderStyle],\n        roundedStyles[rounded],\n        glow && glowIntensityStyles[glowIntensity],\n        glow && currentTheme.glow,\n        currentTheme.text,\n        className,\n      )}\n      style={{\n        borderColor:\n          colorShift && isHovered\n            ? `hsl(${(colorPhase * 3.6) % 360}, 100%, 70%)`\n            : undefined,\n      }}\n      onMouseMove={handleMouseMove}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      {...props}\n    >\n      {lightTrail && isHovered && (\n        <div\n          className=\"absolute w-24 h-24 rounded-full bg-white/20 blur-xl pointer-events-none transition-opacity duration-700\"\n          style={{\n            left: mousePosition.x - 48,\n            top: mousePosition.y - 48,\n            opacity: 0.5,\n          }}\n        />\n      )}\n      <div className=\"relative z-10\">{children}</div>\n      <div\n        className={cn(\n          \"absolute -bottom-2 -right-2 w-16 h-16 transform rotate-45 opacity-70\",\n          currentTheme.accent,\n        )}\n      />\n    </div>\n  );\n};\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "src\\lib\\utils.ts",
      "content": "import clsx, { ClassValue } from \"clsx\";\nimport { Metadata } from \"next\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function humanize(name: string): string {\n  return name\n    .replace(/-/g, \" \")\n    .replace(/([A-Z])/g, \" $1\")\n    .trim()\n    .split(/\\s+/)\n    .map((word) => word[0].toUpperCase() + word.substring(1).toLowerCase())\n    .join(\" \");\n}\n\nexport const truncate = (str: string | null, length: number) => {\n  if (!str || str.length <= length) return str;\n  return `${str.slice(0, length - 3)}...`;\n};\n\nexport const fetcher = (...args: Parameters<typeof fetch>) =>\n  fetch(...args).then((res) => res.json());\n\nexport const capitalize = (str: string, lower = false) =>\n  (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, (match) =>\n    match.toUpperCase(),\n  );\n\nexport function formatDate(input: string | number): string {\n  const date = new Date(input);\n  return date.toLocaleDateString(\"en-US\", {\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n}\n\nexport function absoluteUrl(path: string) {\n  return `${process.env.NEXT_PUBLIC_APP_URL || \"\"}${path}`;\n}\n\nexport function constructMetadata({\n  title = \"Nuvyx UI - Modern React + Tailwind CSS + Motion components & Templates\",\n  description = \"Nuvyx UI is a curated collection of the best landing page components built using React + Tailwind CSS + Motion\",\n  image = absoluteUrl(\"/og\"),\n  ...props\n}: {\n  title?: string;\n  description?: string;\n  image?: string;\n  [key: string]: Metadata[keyof Metadata];\n}): Metadata {\n  return {\n    title,\n    description,\n    keywords: [\n      \"React\",\n      \"Tailwind CSS\",\n      \"Motion\",\n      \"Landing Page\",\n      \"Components\",\n      \"Next.js\",\n    ],\n    openGraph: {\n      title,\n      description,\n      type: \"website\",\n      images: [\n        {\n          url: image,\n          width: 1200,\n          height: 630,\n        },\n      ],\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title,\n      description,\n      images: [image],\n      creator: \"@mihirjaiswal\",\n    },\n    icons: \"/favicon.ico\",\n    metadataBase: new URL(\"https://nuvyxui.vercel.app/\"),\n    authors: [\n      {\n        name: \"Mihir Jaiswal\",\n        url: \"https://github.com/MihirJaiswal\",\n      },\n    ],\n    creator: \"mihirjaiswal\",\n    ...props,\n  };\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}