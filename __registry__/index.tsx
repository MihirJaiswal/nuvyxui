/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "index": {
    name: "index",
    description: "",
    type: "registry:style",
    registryDependencies: ["utils"],
    files: [],
    component: null,
    meta: {},
  },
  "animated-code-block": {
    name: "animated-code-block",
    description: "A code display component with real-time typing effects. Supports syntax highlighting and customizable themes.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/animated-code-block.tsx",
      type: "registry:ui",
      target: "components/ui/animated-code-block.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/animated-code-block.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "animated-code-block"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component animated-code-block:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "animated-gradient-bg": {
    name: "animated-gradient-bg",
    description: "A dynamic animated gradient background component that supports various gradient patterns and animations.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/animated-gradient-bg.tsx",
      type: "registry:ui",
      target: "components/ui/animated-gradient-bg.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/animated-gradient-bg.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "animated-gradient-bg"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component animated-gradient-bg:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "animated-text": {
    name: "animated-text",
    description: "A versatile text animation component that offers multiple animation types. Perfect for adding dynamic text effects to your UI.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/animated-text.tsx",
      type: "registry:ui",
      target: "components/ui/animated-text.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/animated-text.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "animated-text"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component animated-text:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "bento-grid": {
    name: "bento-grid",
    description: "A versatile container component inspired by bento box designs, perfect for creating modern, visually appealing grid layouts.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/bento-grid.tsx",
      type: "registry:ui",
      target: "components/ui/bento-grid.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/bento-grid.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "bento-grid"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component bento-grid:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "bubble-background": {
    name: "bubble-background",
    description: "An interactive fluid bubble background component with animated colorful blobs that respond to user interaction.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/bubble-background.tsx",
      type: "registry:ui",
      target: "components/ui/bubble-background.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/bubble-background.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "bubble-background"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component bubble-background:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "cyberpunk-card": {
    name: "cyberpunk-card",
    description: "A card component with a cyberpunk aesthetic. Features neon colors and a futuristic design.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/cyberpunk-card.tsx",
      type: "registry:ui",
      target: "components/ui/cyberpunk-card.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/cyberpunk-card.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "cyberpunk-card"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component cyberpunk-card:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "dynamic-ripple": {
    name: "dynamic-ripple",
    description: "A ripple effect component that follows the cursor and can be customized with various options.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/dynamic-ripple.tsx",
      type: "registry:ui",
      target: "components/ui/dynamic-ripple.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/dynamic-ripple.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "dynamic-ripple"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component dynamic-ripple:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "github-profile-card": {
    name: "github-profile-card",
    description: "A card component that displays a GitHub user's profile information. It includes their avatar, name, bio, and links to their GitHub profile.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/github-profile-card.tsx",
      type: "registry:ui",
      target: "components/ui/github-profile-card.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/github-profile-card.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "github-profile-card"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component github-profile-card:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "github-repo-card": {
    name: "github-repo-card",
    description: "A card component that displays information about a GitHub repository. It includes the repository name, description, stars, forks, and a link to the repository.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/github-repo-card.tsx",
      type: "registry:ui",
      target: "components/ui/github-repo-card.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/github-repo-card.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "github-repo-card"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component github-repo-card:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "glitch-button": {
    name: "glitch-button",
    description: "Cyberpunk-inspired button with dynamic glitch effects that can be triggered on hover or click.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/glitch-button.tsx",
      type: "registry:ui",
      target: "components/ui/glitch-button.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/glitch-button.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "glitch-button"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component glitch-button:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "gradient-button": {
    name: "gradient-button",
    description: "A button component with a gradient background.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/gradient-button.tsx",
      type: "registry:ui",
      target: "components/ui/gradient-button.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/gradient-button.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "gradient-button"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component gradient-button:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "keyboard": {
    name: "keyboard",
    description: "A keyboard component that simulates a physical keyboard.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/keyboard.tsx",
      type: "registry:ui",
      target: "components/ui/keyboard.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/keyboard.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "keyboard"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component keyboard:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "ms-paint": {
    name: "ms-paint",
    description: "A customizable drawing canvas component with paint-like interface.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/ms-paint.tsx",
      type: "registry:ui",
      target: "components/ui/ms-paint.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/ms-paint.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "ms-paint"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component ms-paint:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "lamp-heading": {
    name: "lamp-heading",
    description: "A heading component with a lamp effect.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/lamp-heading.tsx",
      type: "registry:ui",
      target: "components/ui/lamp-heading.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/lamp-heading.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "lamp-heading"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component lamp-heading:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "liquid-metal-button": {
    name: "liquid-metal-button",
    description: "A button component with a liquid metal effect.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/liquid-metal-button.tsx",
      type: "registry:ui",
      target: "components/ui/liquid-metal-button.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/liquid-metal-button.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "liquid-metal-button"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component liquid-metal-button:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "morphing-button": {
    name: "morphing-button",
    description: "A button component with a morphing effect.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/morphing-button.tsx",
      type: "registry:ui",
      target: "components/ui/morphing-button.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/morphing-button.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "morphing-button"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component morphing-button:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "image-comparison": {
    name: "image-comparison",
    description: "A image comparison component that allows users to compare images.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/image-comparison.tsx",
      type: "registry:ui",
      target: "components/ui/image-comparison.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/image-comparison.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "image-comparison"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component image-comparison:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "image-scanner": {
    name: "image-scanner",
    description: "A image scanner component that allows users to scan images.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/image-scanner.tsx",
      type: "registry:ui",
      target: "components/ui/majestic-card.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/image-scanner.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "image-scanner"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component image-scanner:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "majestic-card": {
    name: "majestic-card",
    description: "A majestic card that that provide several effects.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/majestic-card.tsx",
      type: "registry:ui",
      target: "components/ui/majestic-card.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/majestic-card.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "majestic-card"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component majestic-card:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "marquee": {
    name: "marquee",
    description: "A customizable, interactive scrolling marquee component.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/marquee.tsx",
      type: "registry:ui",
      target: "components/ui/marquee.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/marquee.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "marquee"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component marquee:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "matrix-code-rain": {
    name: "matrix-code-rain",
    description: "A matrix code rain that that provide several effects.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/matrix-code-rain.tsx",
      type: "registry:ui",
      target: "components/ui/matrix-code-rain.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/matrix-code-rain.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "matrix-code-rain"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component matrix-code-rain:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "morphing-blob": {
    name: "morphing-blob",
    description: "A morphing blob that that provide several effects.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/morphing-blob.tsx",
      type: "registry:ui",
      target: "components/ui/morphing-blob.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/morphing-blob.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "morphing-blob"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component morphing-blob:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "music-player": {
    name: "music-player",
    description: "A music player that that provide several effects.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/music-player.tsx",
      type: "registry:ui",
      target: "components/ui/music-player.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/music-player.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "music-player"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component music-player:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "reveal-card": {
    name: "reveal-card",
    description: "A reveal card that that provide several effects.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/reveal-card.tsx",
      type: "registry:ui",
      target: "components/ui/reveal-card.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/reveal-card.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "reveal-card"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component reveal-card:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "scroll-animation-trigger": {
    name: "scroll-animation-trigger",
    description: "A scroll animation trigger that that provide several effects.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/scroll-animation-trigger.tsx",
      type: "registry:ui",
      target: "components/ui/scroll-animation-trigger.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/scroll-animation-trigger.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "scroll-animation-trigger"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component scroll-animation-trigger:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "terminal": {
    name: "terminal",
    description: "A terminal that that provide several effects.",
    type: "registry:ui",
    registryDependencies: [],
    files: [{
      path: "src/nuvyxui/components/terminal.tsx",
      type: "registry:ui",
      target: "components/ui/terminal.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/components/terminal.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "terminal"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component terminal:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "animated-code-block-demo": {
    name: "animated-code-block-demo",
    description: "Example showing a code block with typing animation effects.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/animated-code-block.json"],
    files: [{
      path: "src/nuvyxui/demos/animated-code-block-demo.tsx",
      type: "registry:example",
      target: "components/animated-code-block-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/animated-code-block-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "animated-code-block-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component animated-code-block-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "animated-gradient-bg-demo": {
    name: "animated-gradient-bg-demo",
    description: "Example showing an animated gradient background.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/animated-gradient-bg.json"],
    files: [{
      path: "src/nuvyxui/demos/animated-gradient-bg-demo.tsx",
      type: "registry:example",
      target: "components/animated-gradient-bg-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/animated-gradient-bg-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "animated-gradient-bg-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component animated-gradient-bg-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "animated-text-demo": {
    name: "animated-text-demo",
    description: "Example showing various text animations.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/animated-text.json"],
    files: [{
      path: "src/nuvyxui/demos/animated-text-demo.tsx",
      type: "registry:example",
      target: "components/animated-text-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/animated-text-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "animated-text-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component animated-text-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "bento-grid-demo": {
    name: "bento-grid-demo",
    description: "Example showing a responsive grid layout.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/bento-grid.json"],
    files: [{
      path: "src/nuvyxui/demos/bento-grid-demo.tsx",
      type: "registry:example",
      target: "components/bento-grid-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/bento-grid-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "bento-grid-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component bento-grid-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "bubble-background-demo": {
    name: "bubble-background-demo",
    description: "Example showing an interactive fluid background.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/bubble-background.json"],
    files: [{
      path: "src/nuvyxui/demos/bubble-background-demo.tsx",
      type: "registry:example",
      target: "components/bubble-background-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/bubble-background-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "bubble-background-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component bubble-background-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "cyberpunk-card-demo": {
    name: "cyberpunk-card-demo",
    description: "Example showing a cyberpunk card.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/cyberpunk-card.json"],
    files: [{
      path: "src/nuvyxui/demos/cyberpunk-card-demo.tsx",
      type: "registry:example",
      target: "components/cyberpunk-card-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/cyberpunk-card-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "cyberpunk-card-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component cyberpunk-card-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "cyberpunk-card-demo1": {
    name: "cyberpunk-card-demo1",
    description: "Example showing a cyberpunk card.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/cyberpunk-card.json"],
    files: [{
      path: "src/nuvyxui/demos/cyberpunk-card-demo1.tsx",
      type: "registry:example",
      target: "components/cyberpunk-card-demo1.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/cyberpunk-card-demo1.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "cyberpunk-card-demo1"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component cyberpunk-card-demo1:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "dynamic-ripple-demo": {
    name: "dynamic-ripple-demo",
    description: "Example showing a dynamic ripple effect.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/dynamic-ripple.json"],
    files: [{
      path: "src/nuvyxui/demos/dynamic-ripple-demo.tsx",
      type: "registry:example",
      target: "components/dynamic-ripple-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/dynamic-ripple-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "dynamic-ripple-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component dynamic-ripple-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "github-profile-card-demo": {
    name: "github-profile-card-demo",
    description: "Example showing a GitHub profile card.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/github-profile-card.json"],
    files: [{
      path: "src/nuvyxui/demos/github-profile-card-demo.tsx",
      type: "registry:example",
      target: "components/github-profile-card-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/github-profile-card-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "github-profile-card-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component github-profile-card-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "github-repo-card-demo": {
    name: "github-repo-card-demo",
    description: "Example showing a GitHub repo card.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/github-repo-card.json"],
    files: [{
      path: "src/nuvyxui/demos/github-repo-card-demo.tsx",
      type: "registry:example",
      target: "components/github-repo-card-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/github-repo-card-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "github-repo-card-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component github-repo-card-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "github-repo-card-demo1": {
    name: "github-repo-card-demo1",
    description: "Example showing a GitHub repo card.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/github-repo-card.json"],
    files: [{
      path: "src/nuvyxui/demos/github-repo-card-demo1.tsx",
      type: "registry:example",
      target: "components/github-repo-card-demo1.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/github-repo-card-demo1.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "github-repo-card-demo1"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component github-repo-card-demo1:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "github-repo-card-demo2": {
    name: "github-repo-card-demo2",
    description: "Example showing a GitHub repo card.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/github-repo-card.json"],
    files: [{
      path: "src/nuvyxui/demos/github-repo-card-demo2.tsx",
      type: "registry:example",
      target: "components/github-repo-card-demo2.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/github-repo-card-demo2.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "github-repo-card-demo2"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component github-repo-card-demo2:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "glitch-button-demo": {
    name: "glitch-button-demo",
    description: "Example showing a glitch button.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/glitch-button.json"],
    files: [{
      path: "src/nuvyxui/demos/glitch-button-demo.tsx",
      type: "registry:example",
      target: "components/glitch-button-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/glitch-button-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "glitch-button-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component glitch-button-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "gradient-button-demo": {
    name: "gradient-button-demo",
    description: "Example showing a gradient button.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/gradient-button.json"],
    files: [{
      path: "src/nuvyxui/demos/gradient-button-demo.tsx",
      type: "registry:example",
      target: "components/gradient-button-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/gradient-button-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "gradient-button-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component gradient-button-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "keyboard-demo": {
    name: "keyboard-demo",
    description: "Example showing a interactive keyboard.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/keyboard.json"],
    files: [{
      path: "src/nuvyxui/demos/keyboard-demo.tsx",
      type: "registry:example",
      target: "components/keyboard-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/keyboard-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "keyboard-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component keyboard-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "keyboard-demo1": {
    name: "keyboard-demo1",
    description: "Example showing a interactive keyboard.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/keyboard.json"],
    files: [{
      path: "src/nuvyxui/demos/keyboard-demo1.tsx",
      type: "registry:example",
      target: "components/keyboard-demo1.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/keyboard-demo1.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "keyboard-demo1"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component keyboard-demo1:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "ms-paint-demo": {
    name: "ms-paint-demo",
    description: "Example showing a MS Paint clone.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/ms-paint.json"],
    files: [{
      path: "src/nuvyxui/demos/ms-paint-demo.tsx",
      type: "registry:example",
      target: "components/ms-paint-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/ms-paint-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "ms-paint-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component ms-paint-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "lamp-heading-demo": {
    name: "lamp-heading-demo",
    description: "Example showing a lamp heading.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/lamp-heading.json"],
    files: [{
      path: "src/nuvyxui/demos/lamp-heading-demo.tsx",
      type: "registry:example",
      target: "components/lamp-heading-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/lamp-heading-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "lamp-heading-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component lamp-heading-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "liquid-metal-button-demo": {
    name: "liquid-metal-button-demo",
    description: "Example showing a liquid metal button.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/liquid-metal-button.json"],
    files: [{
      path: "src/nuvyxui/demos/liquid-metal-button-demo.tsx",
      type: "registry:example",
      target: "components/liquid-metal-button-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/liquid-metal-button-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "liquid-metal-button-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component liquid-metal-button-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "morphing-button-demo": {
    name: "morphing-button-demo",
    description: "Example showing a morphing button.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/morphing-button.json"],
    files: [{
      path: "src/nuvyxui/demos/morphing-button-demo.tsx",
      type: "registry:example",
      target: "components/morphing-button-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/morphing-button-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "morphing-button-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component morphing-button-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "image-comparison-demo": {
    name: "image-comparison-demo",
    description: "Example showing a image comparison.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/image-comparison.json"],
    files: [{
      path: "src/nuvyxui/demos/image-comparison-demo.tsx",
      type: "registry:example",
      target: "components/image-comparison-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/image-comparison-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "image-comparison-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component image-comparison-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "image-scanner-demo": {
    name: "image-scanner-demo",
    description: "Example showing a image scanner.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/image-scanner.json"],
    files: [{
      path: "src/nuvyxui/demos/image-scanner-demo.tsx",
      type: "registry:example",
      target: "components/image-scanner-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/image-scanner-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "image-scanner-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component image-scanner-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "majestic-card-demo": {
    name: "majestic-card-demo",
    description: "Example showing a majestic card.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/majestic-card.json"],
    files: [{
      path: "src/nuvyxui/demos/majestic-card-demo.tsx",
      type: "registry:example",
      target: "components/majestic-card-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/majestic-card-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "majestic-card-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component majestic-card-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "marquee-demo": {
    name: "marquee-demo",
    description: "Example showing a marquee.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/marquee.json"],
    files: [{
      path: "src/nuvyxui/demos/marquee-demo.tsx",
      type: "registry:example",
      target: "components/marquee-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/marquee-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "marquee-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component marquee-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "marquee-demo1": {
    name: "marquee-demo1",
    description: "Example showing a marquee.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/marquee.json"],
    files: [{
      path: "src/nuvyxui/demos/marquee-demo1.tsx",
      type: "registry:example",
      target: "components/marquee-demo1.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/marquee-demo1.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "marquee-demo1"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component marquee-demo1:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "marquee-demo2": {
    name: "marquee-demo2",
    description: "Example showing a marquee.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/marquee.json"],
    files: [{
      path: "src/nuvyxui/demos/marquee-demo2.tsx",
      type: "registry:example",
      target: "components/marquee-demo2.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/marquee-demo2.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "marquee-demo2"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component marquee-demo2:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "matrix-code-rain-demo": {
    name: "matrix-code-rain-demo",
    description: "Example showing a matrix code rain.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/matrix-code-rain.json"],
    files: [{
      path: "src/nuvyxui/demos/matrix-code-rain-demo.tsx",
      type: "registry:example",
      target: "components/matrix-code-rain-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/matrix-code-rain-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "matrix-code-rain-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component matrix-code-rain-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "morphing-blob-demo": {
    name: "morphing-blob-demo",
    description: "Example showing a morphing blob.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/morphing-blob.json"],
    files: [{
      path: "src/nuvyxui/demos/morphing-blob-demo.tsx",
      type: "registry:example",
      target: "components/morphing-blob-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/morphing-blob-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "morphing-blob-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component morphing-blob-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "music-player-demo": {
    name: "music-player-demo",
    description: "Example showing a music player.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/music-player.json"],
    files: [{
      path: "src/nuvyxui/demos/music-player-demo.tsx",
      type: "registry:example",
      target: "components/music-player-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/music-player-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "music-player-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component music-player-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "music-player-demo1": {
    name: "music-player-demo1",
    description: "Example showing a music player.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/music-player.json"],
    files: [{
      path: "src/nuvyxui/demos/music-player-demo1.tsx",
      type: "registry:example",
      target: "components/music-player-demo1.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/music-player-demo1.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "music-player-demo1"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component music-player-demo1:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "music-player-demo2": {
    name: "music-player-demo2",
    description: "Example showing a music player.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/music-player.json"],
    files: [{
      path: "src/nuvyxui/demos/music-player-demo2.tsx",
      type: "registry:example",
      target: "components/music-player-demo2.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/music-player-demo2.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "music-player-demo2"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component music-player-demo2:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "reveal-card-demo": {
    name: "reveal-card-demo",
    description: "Example showing a reveal card.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/reveal-card.json"],
    files: [{
      path: "src/nuvyxui/demos/reveal-card-demo.tsx",
      type: "registry:example",
      target: "components/reveal-card-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/reveal-card-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "reveal-card-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component reveal-card-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "scroll-animation-trigger-demo": {
    name: "scroll-animation-trigger-demo",
    description: "Example showing a scroll animation trigger.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/scroll-animation-trigger.json"],
    files: [{
      path: "src/nuvyxui/demos/scroll-animation-trigger-demo.tsx",
      type: "registry:example",
      target: "components/scroll-animation-trigger-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/scroll-animation-trigger-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "scroll-animation-trigger-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component scroll-animation-trigger-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "scroll-animation-trigger-demo1": {
    name: "scroll-animation-trigger-demo1",
    description: "Example showing a scroll animation trigger.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/scroll-animation-trigger.json"],
    files: [{
      path: "src/nuvyxui/demos/scroll-animation-trigger-demo1.tsx",
      type: "registry:example",
      target: "components/scroll-animation-trigger-demo1.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/scroll-animation-trigger-demo1.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "scroll-animation-trigger-demo1"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component scroll-animation-trigger-demo1:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "scroll-animation-trigger-demo2": {
    name: "scroll-animation-trigger-demo2",
    description: "Example showing a scroll animation trigger.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/scroll-animation-trigger.json"],
    files: [{
      path: "src/nuvyxui/demos/scroll-animation-trigger-demo2.tsx",
      type: "registry:example",
      target: "components/scroll-animation-trigger-demo2.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/scroll-animation-trigger-demo2.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "scroll-animation-trigger-demo2"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component scroll-animation-trigger-demo2:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "terminal-demo": {
    name: "terminal-demo",
    description: "Example showing a terminal.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/terminal.json"],
    files: [{
      path: "src/nuvyxui/demos/terminal-demo.tsx",
      type: "registry:example",
      target: "components/terminal-demo.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/terminal-demo.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "terminal-demo"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component terminal-demo:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "terminal-demo1": {
    name: "terminal-demo1",
    description: "Example showing a terminal.",
    type: "registry:example",
    registryDependencies: ["https://nuvyxui.vercel.app/r/terminal.json"],
    files: [{
      path: "src/nuvyxui/demos/terminal-demo1.tsx",
      type: "registry:example",
      target: "components/terminal-demo1.tsx"
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../src/nuvyxui/demos/terminal-demo1.tsx")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "terminal-demo1"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component terminal-demo1:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  "utils": {
    name: "utils",
    description: "",
    type: "registry:lib",
    registryDependencies: [],
    files: [{
      path: "registry/lib/utils.ts",
      type: "registry:lib",
      target: ""
    }],
    component: React.lazy(async () => {
      try {
        const mod = await import("../registry/lib/utils.ts")
        const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "utils"
        return { default: mod.default || mod[exportName] }
      } catch (error) {
        console.error("Error loading component utils:", error)
        return { default: () => React.createElement("div", {}, "Failed to load component") }
      }
    }),
    meta: {},
  },
  }